//
// Generated by Bluespec Compiler, version 2021.06.chen (build f2da894e, 2021-06-19)
//
// On Thu Jun 24 08:10:42 CST 2021
//
//
// Ports:
// Name                         I/O  size props
// RDY_startPred                  O     1
// io_out_get                     O   532
// RDY_io_out_get                 O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// startPred_xRef                 I   264
// startPred_cur                  I   512 reg
// startPred_dcVal                I     8 reg
// EN_startPred                   I     1
// EN_io_out_get                  I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkIntraPred8(CLK,
		    RST_N,

		    startPred_xRef,
		    startPred_cur,
		    startPred_dcVal,
		    EN_startPred,
		    RDY_startPred,

		    EN_io_out_get,
		    io_out_get,
		    RDY_io_out_get);
  input  CLK;
  input  RST_N;

  // action method startPred
  input  [263 : 0] startPred_xRef;
  input  [511 : 0] startPred_cur;
  input  [7 : 0] startPred_dcVal;
  input  EN_startPred;
  output RDY_startPred;

  // actionvalue method io_out_get
  input  EN_io_out_get;
  output [531 : 0] io_out_get;
  output RDY_io_out_get;

  // signals for module outputs
  wire [531 : 0] io_out_get;
  wire RDY_io_out_get, RDY_startPred;

  // inlined wires
  wire [532 : 0] fifo_out_rv$port0__write_1,
		 fifo_out_rv$port1__read,
		 fifo_out_rv$port1__write_1,
		 fifo_out_rv$port2__read;
  wire fifo_out_rv$EN_port1__write;

  // register fifo_out_rv
  reg [532 : 0] fifo_out_rv;
  wire [532 : 0] fifo_out_rv$D_IN;
  wire fifo_out_rv$EN;

  // register r_bestMode
  reg [5 : 0] r_bestMode;
  wire [5 : 0] r_bestMode$D_IN;
  wire r_bestMode$EN;

  // register r_bestPred
  reg [511 : 0] r_bestPred;
  wire [511 : 0] r_bestPred$D_IN;
  wire r_bestPred$EN;

  // register r_bestRecon
  reg [511 : 0] r_bestRecon;
  wire [511 : 0] r_bestRecon$D_IN;
  wire r_bestRecon$EN;

  // register r_bestSad
  reg [13 : 0] r_bestSad;
  wire [13 : 0] r_bestSad$D_IN;
  wire r_bestSad$EN;

  // register r_cnt
  reg [6 : 0] r_cnt;
  wire [6 : 0] r_cnt$D_IN;
  wire r_cnt$EN;

  // register r_cur
  reg [511 : 0] r_cur;
  wire [511 : 0] r_cur$D_IN;
  wire r_cur$EN;

  // register r_dcVal
  reg [7 : 0] r_dcVal;
  wire [7 : 0] r_dcVal$D_IN;
  wire r_dcVal$EN;

  // register r_done
  reg r_done;
  wire r_done$D_IN, r_done$EN;

  // register r_planar_dx
  reg [87 : 0] r_planar_dx;
  wire [87 : 0] r_planar_dx$D_IN;
  wire r_planar_dx$EN;

  // register r_planar_dy
  reg [87 : 0] r_planar_dy;
  wire [87 : 0] r_planar_dy$D_IN;
  wire r_planar_dy$EN;

  // register r_qp
  reg [5 : 0] r_qp;
  wire [5 : 0] r_qp$D_IN;
  wire r_qp$EN;

  // register r_ref
  reg [263 : 0] r_ref;
  wire [263 : 0] r_ref$D_IN;
  wire r_ref$EN;

  // register r_s00
  reg [902 : 0] r_s00;
  wire [902 : 0] r_s00$D_IN;
  wire r_s00$EN;

  // register r_s01
  reg [262 : 0] r_s01;
  wire [262 : 0] r_s01$D_IN;
  wire r_s01$EN;

  // register r_s01_tmpMode
  reg [6 : 0] r_s01_tmpMode;
  wire [6 : 0] r_s01_tmpMode$D_IN;
  wire r_s01_tmpMode$EN;

  // register r_s01_tmpPred
  reg [511 : 0] r_s01_tmpPred;
  wire [511 : 0] r_s01_tmpPred$D_IN;
  wire r_s01_tmpPred$EN;

  // register r_s01_tmpSum
  reg [25 : 0] r_s01_tmpSum;
  wire [25 : 0] r_s01_tmpSum$D_IN;
  wire r_s01_tmpSum$EN;

  // register r_status_dec
  reg [4 : 0] r_status_dec;
  wire [4 : 0] r_status_dec$D_IN;
  wire r_status_dec$EN;

  // register r_status_enc
  reg [4 : 0] r_status_enc;
  wire [4 : 0] r_status_enc$D_IN;
  wire r_status_enc$EN;

  // ports of submodule rf_rom_m
  wire [191 : 0] rf_rom_m$D_IN, rf_rom_m$D_OUT_1, rf_rom_m$D_OUT_2;
  wire [7 : 0] rf_rom_m$ADDR_1,
	       rf_rom_m$ADDR_2,
	       rf_rom_m$ADDR_3,
	       rf_rom_m$ADDR_4,
	       rf_rom_m$ADDR_5,
	       rf_rom_m$ADDR_IN;
  wire rf_rom_m$WE;

  // ports of submodule rf_rom_x
  wire [255 : 0] rf_rom_x$D_IN, rf_rom_x$D_OUT_1, rf_rom_x$D_OUT_2;
  wire [7 : 0] rf_rom_x$ADDR_1,
	       rf_rom_x$ADDR_2,
	       rf_rom_x$ADDR_3,
	       rf_rom_x$ADDR_4,
	       rf_rom_x$ADDR_5,
	       rf_rom_x$ADDR_IN;
  wire rf_rom_x$WE;

  // rule scheduling signals
  wire WILL_FIRE_RL_s03_decide;

  // inputs to muxes for submodule ports
  wire [87 : 0] MUX_r_planar_dx$write_1__VAL_2,
		MUX_r_planar_dy$write_1__VAL_1,
		MUX_r_planar_dy$write_1__VAL_2;
  wire [6 : 0] MUX_r_cnt$write_1__VAL_1;
  wire MUX_r_bestSad$write_1__SEL_1, MUX_r_planar_dx$write_1__SEL_1;

  // remaining internal signals
  wire [255 : 0] mkFlt8x4___d38;
  wire [21 : 0] _3_MUL_0_CONCAT_startPred_xRef_BITS_207_TO_200__ETC___d515,
		_3_MUL_0_CONCAT_startPred_xRef_BITS_79_TO_72_88_89___d499,
		_5_MUL_0_CONCAT_startPred_xRef_BITS_207_TO_200__ETC___d511,
		_5_MUL_0_CONCAT_startPred_xRef_BITS_79_TO_72_88_89___d495,
		_6_MUL_0_CONCAT_startPred_xRef_BITS_207_TO_200__ETC___d509,
		_6_MUL_0_CONCAT_startPred_xRef_BITS_79_TO_72_88_89___d493,
		_7_MUL_0_CONCAT_startPred_xRef_BITS_207_TO_200__ETC___d506,
		_7_MUL_0_CONCAT_startPred_xRef_BITS_79_TO_72_88_89___d490;
  wire [13 : 0] xSad__h74086;
  wire [12 : 0] _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__1_BIT_256__ETC___d100,
		_0_CONCAT_IF_0_CONCAT_IF_r_s01_read__1_BIT_256__ETC___d151,
		_0_CONCAT_IF_0_CONCAT_IF_r_s01_read__1_BIT_256__ETC___d203,
		_0_CONCAT_IF_0_CONCAT_IF_r_s01_read__1_BIT_256__ETC___d254,
		_0_CONCAT_IF_0_CONCAT_IF_r_s01_read__1_BIT_256__ETC___d307,
		_0_CONCAT_IF_0_CONCAT_IF_r_s01_read__1_BIT_256__ETC___d358,
		_0_CONCAT_IF_0_CONCAT_IF_r_s01_read__1_BIT_256__ETC___d410,
		_0_CONCAT_IF_0_CONCAT_IF_r_s01_read__1_BIT_256__ETC___d461,
		_0_CONCAT_IF_0_CONCAT_IF_r_s01_read__1_BIT_256__ETC___d464;
  wire [8 : 0] _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d107,
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d119,
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d132,
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d144,
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d159,
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d171,
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d184,
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d196,
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d210,
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d222,
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d235,
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d247,
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d263,
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d275,
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d288,
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d300,
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d314,
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d326,
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d339,
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d351,
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d366,
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d378,
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d391,
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d403,
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d417,
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d429,
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d442,
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d454,
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d56,
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d68,
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d81,
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d93;
  wire [7 : 0] x__h67214,
	       x__h67262,
	       x__h68058,
	       x__h68104,
	       x__h68252,
	       x__h68298,
	       x__h68437,
	       x__h68483,
	       x__h68640,
	       x__h68686,
	       x__h68825,
	       x__h68871,
	       x__h69019,
	       x__h69065,
	       x__h69204,
	       x__h69250,
	       x__h69416,
	       x__h69462,
	       x__h69601,
	       x__h69647,
	       x__h69795,
	       x__h69841,
	       x__h69980,
	       x__h70026,
	       x__h70183,
	       x__h70229,
	       x__h70368,
	       x__h70414,
	       x__h70562,
	       x__h70608,
	       x__h70747,
	       x__h70793,
	       x__h70968,
	       x__h71014,
	       x__h71153,
	       x__h71199,
	       x__h71347,
	       x__h71393,
	       x__h71532,
	       x__h71578,
	       x__h71735,
	       x__h71781,
	       x__h71920,
	       x__h71966,
	       x__h72114,
	       x__h72160,
	       x__h72299,
	       x__h72345,
	       x__h72511,
	       x__h72557,
	       x__h72696,
	       x__h72742,
	       x__h72890,
	       x__h72936,
	       x__h73075,
	       x__h73121,
	       x__h73278,
	       x__h73324,
	       x__h73463,
	       x__h73509,
	       x__h73657,
	       x__h73703,
	       x__h73842,
	       x__h73888;
  wire _0_CONCAT_r_s01_tmpSum_read__6_BITS_12_TO_0_7_7_ETC___d476,
       x0__h1120,
       x1__h1121;

  // action method startPred
  assign RDY_startPred = r_status_enc[3:0] == 4'd0 ;

  // actionvalue method io_out_get
  assign io_out_get = fifo_out_rv[531:0] ;
  assign RDY_io_out_get = fifo_out_rv[532] ;

  // submodule rf_rom_m
  RegFileLoad #(.file("tbl_intra_m.hex"),
		.addr_width(32'd8),
		.data_width(32'd192),
		.lo(8'd0),
		.hi(8'd139),
		.binary(1'd0)) rf_rom_m(.CLK(CLK),
					.ADDR_1(rf_rom_m$ADDR_1),
					.ADDR_2(rf_rom_m$ADDR_2),
					.ADDR_3(rf_rom_m$ADDR_3),
					.ADDR_4(rf_rom_m$ADDR_4),
					.ADDR_5(rf_rom_m$ADDR_5),
					.ADDR_IN(rf_rom_m$ADDR_IN),
					.D_IN(rf_rom_m$D_IN),
					.WE(rf_rom_m$WE),
					.D_OUT_1(rf_rom_m$D_OUT_1),
					.D_OUT_2(rf_rom_m$D_OUT_2),
					.D_OUT_3(),
					.D_OUT_4(),
					.D_OUT_5());

  // submodule rf_rom_x
  RegFileLoad #(.file("tbl_intra_x.hex"),
		.addr_width(32'd8),
		.data_width(32'd256),
		.lo(8'd0),
		.hi(8'd139),
		.binary(1'd0)) rf_rom_x(.CLK(CLK),
					.ADDR_1(rf_rom_x$ADDR_1),
					.ADDR_2(rf_rom_x$ADDR_2),
					.ADDR_3(rf_rom_x$ADDR_3),
					.ADDR_4(rf_rom_x$ADDR_4),
					.ADDR_5(rf_rom_x$ADDR_5),
					.ADDR_IN(rf_rom_x$ADDR_IN),
					.D_IN(rf_rom_x$D_IN),
					.WE(rf_rom_x$WE),
					.D_OUT_1(rf_rom_x$D_OUT_1),
					.D_OUT_2(rf_rom_x$D_OUT_2),
					.D_OUT_3(),
					.D_OUT_4(),
					.D_OUT_5());

  // rule RL_s03_decide
  assign WILL_FIRE_RL_s03_decide = r_status_enc[3] && r_s01_tmpMode[0] ;

  // inputs to muxes for submodule ports
  assign MUX_r_bestSad$write_1__SEL_1 =
	     WILL_FIRE_RL_s03_decide &&
	     _0_CONCAT_r_s01_tmpSum_read__6_BITS_12_TO_0_7_7_ETC___d476 ;
  assign MUX_r_planar_dx$write_1__SEL_1 = r_status_enc[1] && r_s00[896] ;
  assign MUX_r_cnt$write_1__VAL_1 = r_cnt + 7'd1 ;
  assign MUX_r_planar_dx$write_1__VAL_2 =
	     { startPred_xRef[79:72],
	       3'd0,
	       _7_MUL_0_CONCAT_startPred_xRef_BITS_79_TO_72_88_89___d490[10:0],
	       _6_MUL_0_CONCAT_startPred_xRef_BITS_79_TO_72_88_89___d493[10:0],
	       _5_MUL_0_CONCAT_startPred_xRef_BITS_79_TO_72_88_89___d495[10:0],
	       1'd0,
	       startPred_xRef[79:72],
	       2'd0,
	       _3_MUL_0_CONCAT_startPred_xRef_BITS_79_TO_72_88_89___d499[10:0],
	       2'd0,
	       startPred_xRef[79:72],
	       4'd0,
	       startPred_xRef[79:72] } ;
  assign MUX_r_planar_dy$write_1__VAL_1 = { 44'd0, r_planar_dy[87:44] } ;
  assign MUX_r_planar_dy$write_1__VAL_2 =
	     { startPred_xRef[207:200],
	       3'd0,
	       _7_MUL_0_CONCAT_startPred_xRef_BITS_207_TO_200__ETC___d506[10:0],
	       _6_MUL_0_CONCAT_startPred_xRef_BITS_207_TO_200__ETC___d509[10:0],
	       _5_MUL_0_CONCAT_startPred_xRef_BITS_207_TO_200__ETC___d511[10:0],
	       1'd0,
	       startPred_xRef[207:200],
	       2'd0,
	       _3_MUL_0_CONCAT_startPred_xRef_BITS_207_TO_200__ETC___d515[10:0],
	       2'd0,
	       startPred_xRef[207:200],
	       4'd0,
	       startPred_xRef[207:200] } ;

  // inlined wires
  assign fifo_out_rv$port0__write_1 =
	     { 1'd0,
	       532'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign fifo_out_rv$port1__read =
	     EN_io_out_get ? fifo_out_rv$port0__write_1 : fifo_out_rv ;
  assign fifo_out_rv$EN_port1__write =
	     !fifo_out_rv$port1__read[532] && r_status_dec[0] ;
  assign fifo_out_rv$port1__write_1 =
	     { 1'd1, r_bestMode, r_bestSad, r_bestPred } ;
  assign fifo_out_rv$port2__read =
	     fifo_out_rv$EN_port1__write ?
	       fifo_out_rv$port1__write_1 :
	       fifo_out_rv$port1__read ;

  // register fifo_out_rv
  assign fifo_out_rv$D_IN = fifo_out_rv$port2__read ;
  assign fifo_out_rv$EN = 1'b1 ;

  // register r_bestMode
  assign r_bestMode$D_IN = r_s01_tmpMode[6:1] ;
  assign r_bestMode$EN = MUX_r_bestSad$write_1__SEL_1 ;

  // register r_bestPred
  assign r_bestPred$D_IN = r_s01_tmpPred ;
  assign r_bestPred$EN = MUX_r_bestSad$write_1__SEL_1 ;

  // register r_bestRecon
  assign r_bestRecon$D_IN = 512'h0 ;
  assign r_bestRecon$EN = 1'b0 ;

  // register r_bestSad
  assign r_bestSad$D_IN =
	     MUX_r_bestSad$write_1__SEL_1 ? xSad__h74086 : 14'd16383 ;
  assign r_bestSad$EN =
	     WILL_FIRE_RL_s03_decide &&
	     _0_CONCAT_r_s01_tmpSum_read__6_BITS_12_TO_0_7_7_ETC___d476 ||
	     EN_startPred ;

  // register r_cnt
  assign r_cnt$D_IN = r_status_enc[0] ? MUX_r_cnt$write_1__VAL_1 : 7'd0 ;
  assign r_cnt$EN = r_status_enc[0] || EN_startPred ;

  // register r_cur
  assign r_cur$D_IN = startPred_cur ;
  assign r_cur$EN = EN_startPred ;

  // register r_dcVal
  assign r_dcVal$D_IN = startPred_dcVal ;
  assign r_dcVal$EN = EN_startPred ;

  // register r_done
  assign r_done$D_IN = 1'b0 ;
  assign r_done$EN = 1'b0 ;

  // register r_planar_dx
  assign r_planar_dx$D_IN =
	     MUX_r_planar_dx$write_1__SEL_1 ?
	       88'd0 :
	       MUX_r_planar_dx$write_1__VAL_2 ;
  assign r_planar_dx$EN = r_status_enc[1] && r_s00[896] || EN_startPred ;

  // register r_planar_dy
  assign r_planar_dy$D_IN =
	     r_status_enc[1] ?
	       MUX_r_planar_dy$write_1__VAL_1 :
	       MUX_r_planar_dy$write_1__VAL_2 ;
  assign r_planar_dy$EN = r_status_enc[1] || EN_startPred ;

  // register r_qp
  assign r_qp$D_IN = 6'h0 ;
  assign r_qp$EN = 1'b0 ;

  // register r_ref
  assign r_ref$D_IN = startPred_xRef ;
  assign r_ref$EN = EN_startPred ;

  // register r_s00
  assign r_s00$D_IN =
	     { r_cnt,
	       rf_rom_m$D_OUT_2,
	       rf_rom_m$D_OUT_1,
	       rf_rom_x$D_OUT_2,
	       rf_rom_x$D_OUT_1 } ;
  assign r_s00$EN = r_status_enc[0] ;

  // register r_s01
  assign r_s01$D_IN = { r_s00[902:896], mkFlt8x4___d38 } ;
  assign r_s01$EN = r_status_enc[1] ;

  // register r_s01_tmpMode
  assign r_s01_tmpMode$D_IN = r_s01[262:256] ;
  assign r_s01_tmpMode$EN = r_status_enc[2] ;

  // register r_s01_tmpPred
  assign r_s01_tmpPred$D_IN = { r_s01[255:0], r_s01_tmpPred[511:256] } ;
  assign r_s01_tmpPred$EN = r_status_enc[2] ;

  // register r_s01_tmpSum
  assign r_s01_tmpSum$D_IN =
	     { r_s01_tmpSum[12:0],
	       _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__1_BIT_256__ETC___d464 } ;
  assign r_s01_tmpSum$EN = r_status_enc[2] ;

  // register r_status_dec
  assign r_status_dec$D_IN = { r_status_dec[3:0], x1__h1121 } ;
  assign r_status_dec$EN = 1'd1 ;

  // register r_status_enc
  assign r_status_enc$D_IN = { r_status_enc[3:0], x0__h1120 } ;
  assign r_status_enc$EN = 1'd1 ;

  // submodule rf_rom_m
  assign rf_rom_m$ADDR_1 = { r_cnt, 1'b1 } ;
  assign rf_rom_m$ADDR_2 = { r_cnt, 1'b0 } ;
  assign rf_rom_m$ADDR_3 = 8'h0 ;
  assign rf_rom_m$ADDR_4 = 8'h0 ;
  assign rf_rom_m$ADDR_5 = 8'h0 ;
  assign rf_rom_m$ADDR_IN = 8'h0 ;
  assign rf_rom_m$D_IN = 192'h0 ;
  assign rf_rom_m$WE = 1'b0 ;

  // submodule rf_rom_x
  assign rf_rom_x$ADDR_1 = { r_cnt, 1'b1 } ;
  assign rf_rom_x$ADDR_2 = { r_cnt, 1'b0 } ;
  assign rf_rom_x$ADDR_3 = 8'h0 ;
  assign rf_rom_x$ADDR_4 = 8'h0 ;
  assign rf_rom_x$ADDR_5 = 8'h0 ;
  assign rf_rom_x$ADDR_IN = 8'h0 ;
  assign rf_rom_x$D_IN = 256'h0 ;
  assign rf_rom_x$WE = 1'b0 ;

  // remaining internal signals
  module_mkFlt8x4 instance_mkFlt8x4_0(.mkFlt8x4_xRef({ r_dcVal, r_ref }),
				      .mkFlt8x4_dx(r_planar_dx),
				      .mkFlt8x4_dy(r_planar_dy[43:0]),
				      .mkFlt8x4_m0(r_s00[895:704]),
				      .mkFlt8x4_m1(r_s00[703:512]),
				      .mkFlt8x4_x0(r_s00[511:256]),
				      .mkFlt8x4_x1(r_s00[255:0]),
				      .mkFlt8x4(mkFlt8x4___d38));
  assign _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__1_BIT_256__ETC___d100 =
	     { 5'd0, x__h67214 } + { 5'd0, x__h68058 } + { 5'd0, x__h68252 } +
	     { 5'd0, x__h68437 } ;
  assign _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__1_BIT_256__ETC___d151 =
	     { 5'd0, x__h68640 } + { 5'd0, x__h68825 } + { 5'd0, x__h69019 } +
	     { 5'd0, x__h69204 } ;
  assign _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__1_BIT_256__ETC___d203 =
	     { 5'd0, x__h69416 } + { 5'd0, x__h69601 } + { 5'd0, x__h69795 } +
	     { 5'd0, x__h69980 } ;
  assign _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__1_BIT_256__ETC___d254 =
	     { 5'd0, x__h70183 } + { 5'd0, x__h70368 } + { 5'd0, x__h70562 } +
	     { 5'd0, x__h70747 } ;
  assign _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__1_BIT_256__ETC___d307 =
	     { 5'd0, x__h70968 } + { 5'd0, x__h71153 } + { 5'd0, x__h71347 } +
	     { 5'd0, x__h71532 } ;
  assign _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__1_BIT_256__ETC___d358 =
	     { 5'd0, x__h71735 } + { 5'd0, x__h71920 } + { 5'd0, x__h72114 } +
	     { 5'd0, x__h72299 } ;
  assign _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__1_BIT_256__ETC___d410 =
	     { 5'd0, x__h72511 } + { 5'd0, x__h72696 } + { 5'd0, x__h72890 } +
	     { 5'd0, x__h73075 } ;
  assign _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__1_BIT_256__ETC___d461 =
	     { 5'd0, x__h73278 } + { 5'd0, x__h73463 } + { 5'd0, x__h73657 } +
	     { 5'd0, x__h73842 } ;
  assign _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__1_BIT_256__ETC___d464 =
	     _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__1_BIT_256__ETC___d100 +
	     _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__1_BIT_256__ETC___d151 +
	     _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__1_BIT_256__ETC___d203 +
	     _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__1_BIT_256__ETC___d254 +
	     _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__1_BIT_256__ETC___d307 +
	     _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__1_BIT_256__ETC___d358 +
	     _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__1_BIT_256__ETC___d410 +
	     _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__1_BIT_256__ETC___d461 ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d107 =
	     { 1'd0, x__h68686 } - { 1'd0, r_s01[39:32] } ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d119 =
	     { 1'd0, x__h68871 } - { 1'd0, r_s01[47:40] } ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d132 =
	     { 1'd0, x__h69065 } - { 1'd0, r_s01[55:48] } ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d144 =
	     { 1'd0, x__h69250 } - { 1'd0, r_s01[63:56] } ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d159 =
	     { 1'd0, x__h69462 } - { 1'd0, r_s01[71:64] } ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d171 =
	     { 1'd0, x__h69647 } - { 1'd0, r_s01[79:72] } ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d184 =
	     { 1'd0, x__h69841 } - { 1'd0, r_s01[87:80] } ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d196 =
	     { 1'd0, x__h70026 } - { 1'd0, r_s01[95:88] } ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d210 =
	     { 1'd0, x__h70229 } - { 1'd0, r_s01[103:96] } ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d222 =
	     { 1'd0, x__h70414 } - { 1'd0, r_s01[111:104] } ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d235 =
	     { 1'd0, x__h70608 } - { 1'd0, r_s01[119:112] } ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d247 =
	     { 1'd0, x__h70793 } - { 1'd0, r_s01[127:120] } ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d263 =
	     { 1'd0, x__h71014 } - { 1'd0, r_s01[135:128] } ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d275 =
	     { 1'd0, x__h71199 } - { 1'd0, r_s01[143:136] } ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d288 =
	     { 1'd0, x__h71393 } - { 1'd0, r_s01[151:144] } ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d300 =
	     { 1'd0, x__h71578 } - { 1'd0, r_s01[159:152] } ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d314 =
	     { 1'd0, x__h71781 } - { 1'd0, r_s01[167:160] } ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d326 =
	     { 1'd0, x__h71966 } - { 1'd0, r_s01[175:168] } ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d339 =
	     { 1'd0, x__h72160 } - { 1'd0, r_s01[183:176] } ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d351 =
	     { 1'd0, x__h72345 } - { 1'd0, r_s01[191:184] } ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d366 =
	     { 1'd0, x__h72557 } - { 1'd0, r_s01[199:192] } ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d378 =
	     { 1'd0, x__h72742 } - { 1'd0, r_s01[207:200] } ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d391 =
	     { 1'd0, x__h72936 } - { 1'd0, r_s01[215:208] } ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d403 =
	     { 1'd0, x__h73121 } - { 1'd0, r_s01[223:216] } ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d417 =
	     { 1'd0, x__h73324 } - { 1'd0, r_s01[231:224] } ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d429 =
	     { 1'd0, x__h73509 } - { 1'd0, r_s01[239:232] } ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d442 =
	     { 1'd0, x__h73703 } - { 1'd0, r_s01[247:240] } ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d454 =
	     { 1'd0, x__h73888 } - { 1'd0, r_s01[255:248] } ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d56 =
	     { 1'd0, x__h67262 } - { 1'd0, r_s01[7:0] } ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d68 =
	     { 1'd0, x__h68104 } - { 1'd0, r_s01[15:8] } ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d81 =
	     { 1'd0, x__h68298 } - { 1'd0, r_s01[23:16] } ;
  assign _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d93 =
	     { 1'd0, x__h68483 } - { 1'd0, r_s01[31:24] } ;
  assign _0_CONCAT_r_s01_tmpSum_read__6_BITS_12_TO_0_7_7_ETC___d476 =
	     xSad__h74086 < r_bestSad ;
  assign _3_MUL_0_CONCAT_startPred_xRef_BITS_207_TO_200__ETC___d515 =
	     11'd3 * { 3'd0, startPred_xRef[207:200] } ;
  assign _3_MUL_0_CONCAT_startPred_xRef_BITS_79_TO_72_88_89___d499 =
	     11'd3 * { 3'd0, startPred_xRef[79:72] } ;
  assign _5_MUL_0_CONCAT_startPred_xRef_BITS_207_TO_200__ETC___d511 =
	     11'd5 * { 3'd0, startPred_xRef[207:200] } ;
  assign _5_MUL_0_CONCAT_startPred_xRef_BITS_79_TO_72_88_89___d495 =
	     11'd5 * { 3'd0, startPred_xRef[79:72] } ;
  assign _6_MUL_0_CONCAT_startPred_xRef_BITS_207_TO_200__ETC___d509 =
	     11'd6 * { 3'd0, startPred_xRef[207:200] } ;
  assign _6_MUL_0_CONCAT_startPred_xRef_BITS_79_TO_72_88_89___d493 =
	     11'd6 * { 3'd0, startPred_xRef[79:72] } ;
  assign _7_MUL_0_CONCAT_startPred_xRef_BITS_207_TO_200__ETC___d506 =
	     11'd7 * { 3'd0, startPred_xRef[207:200] } ;
  assign _7_MUL_0_CONCAT_startPred_xRef_BITS_79_TO_72_88_89___d490 =
	     11'd7 * { 3'd0, startPred_xRef[79:72] } ;
  assign x0__h1120 = EN_startPred || r_cnt < 7'd69 ;
  assign x1__h1121 = WILL_FIRE_RL_s03_decide && r_s01_tmpMode[6:1] == 6'd34 ;
  assign xSad__h74086 =
	     { 1'd0, r_s01_tmpSum[12:0] } + { 1'd0, r_s01_tmpSum[25:13] } ;
  assign x__h67214 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d56[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d56[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d56[7:0] ;
  assign x__h67262 = r_s01[256] ? r_cur[263:256] : r_cur[7:0] ;
  assign x__h68058 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d68[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d68[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d68[7:0] ;
  assign x__h68104 = r_s01[256] ? r_cur[271:264] : r_cur[15:8] ;
  assign x__h68252 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d81[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d81[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d81[7:0] ;
  assign x__h68298 = r_s01[256] ? r_cur[279:272] : r_cur[23:16] ;
  assign x__h68437 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d93[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d93[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d93[7:0] ;
  assign x__h68483 = r_s01[256] ? r_cur[287:280] : r_cur[31:24] ;
  assign x__h68640 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d107[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d107[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d107[7:0] ;
  assign x__h68686 = r_s01[256] ? r_cur[295:288] : r_cur[39:32] ;
  assign x__h68825 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d119[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d119[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d119[7:0] ;
  assign x__h68871 = r_s01[256] ? r_cur[303:296] : r_cur[47:40] ;
  assign x__h69019 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d132[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d132[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d132[7:0] ;
  assign x__h69065 = r_s01[256] ? r_cur[311:304] : r_cur[55:48] ;
  assign x__h69204 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d144[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d144[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d144[7:0] ;
  assign x__h69250 = r_s01[256] ? r_cur[319:312] : r_cur[63:56] ;
  assign x__h69416 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d159[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d159[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d159[7:0] ;
  assign x__h69462 = r_s01[256] ? r_cur[327:320] : r_cur[71:64] ;
  assign x__h69601 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d171[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d171[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d171[7:0] ;
  assign x__h69647 = r_s01[256] ? r_cur[335:328] : r_cur[79:72] ;
  assign x__h69795 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d184[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d184[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d184[7:0] ;
  assign x__h69841 = r_s01[256] ? r_cur[343:336] : r_cur[87:80] ;
  assign x__h69980 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d196[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d196[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d196[7:0] ;
  assign x__h70026 = r_s01[256] ? r_cur[351:344] : r_cur[95:88] ;
  assign x__h70183 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d210[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d210[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d210[7:0] ;
  assign x__h70229 = r_s01[256] ? r_cur[359:352] : r_cur[103:96] ;
  assign x__h70368 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d222[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d222[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d222[7:0] ;
  assign x__h70414 = r_s01[256] ? r_cur[367:360] : r_cur[111:104] ;
  assign x__h70562 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d235[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d235[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d235[7:0] ;
  assign x__h70608 = r_s01[256] ? r_cur[375:368] : r_cur[119:112] ;
  assign x__h70747 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d247[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d247[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d247[7:0] ;
  assign x__h70793 = r_s01[256] ? r_cur[383:376] : r_cur[127:120] ;
  assign x__h70968 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d263[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d263[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d263[7:0] ;
  assign x__h71014 = r_s01[256] ? r_cur[391:384] : r_cur[135:128] ;
  assign x__h71153 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d275[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d275[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d275[7:0] ;
  assign x__h71199 = r_s01[256] ? r_cur[399:392] : r_cur[143:136] ;
  assign x__h71347 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d288[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d288[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d288[7:0] ;
  assign x__h71393 = r_s01[256] ? r_cur[407:400] : r_cur[151:144] ;
  assign x__h71532 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d300[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d300[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d300[7:0] ;
  assign x__h71578 = r_s01[256] ? r_cur[415:408] : r_cur[159:152] ;
  assign x__h71735 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d314[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d314[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d314[7:0] ;
  assign x__h71781 = r_s01[256] ? r_cur[423:416] : r_cur[167:160] ;
  assign x__h71920 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d326[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d326[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d326[7:0] ;
  assign x__h71966 = r_s01[256] ? r_cur[431:424] : r_cur[175:168] ;
  assign x__h72114 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d339[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d339[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d339[7:0] ;
  assign x__h72160 = r_s01[256] ? r_cur[439:432] : r_cur[183:176] ;
  assign x__h72299 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d351[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d351[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d351[7:0] ;
  assign x__h72345 = r_s01[256] ? r_cur[447:440] : r_cur[191:184] ;
  assign x__h72511 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d366[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d366[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d366[7:0] ;
  assign x__h72557 = r_s01[256] ? r_cur[455:448] : r_cur[199:192] ;
  assign x__h72696 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d378[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d378[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d378[7:0] ;
  assign x__h72742 = r_s01[256] ? r_cur[463:456] : r_cur[207:200] ;
  assign x__h72890 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d391[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d391[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d391[7:0] ;
  assign x__h72936 = r_s01[256] ? r_cur[471:464] : r_cur[215:208] ;
  assign x__h73075 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d403[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d403[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d403[7:0] ;
  assign x__h73121 = r_s01[256] ? r_cur[479:472] : r_cur[223:216] ;
  assign x__h73278 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d417[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d417[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d417[7:0] ;
  assign x__h73324 = r_s01[256] ? r_cur[487:480] : r_cur[231:224] ;
  assign x__h73463 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d429[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d429[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d429[7:0] ;
  assign x__h73509 = r_s01[256] ? r_cur[495:488] : r_cur[239:232] ;
  assign x__h73657 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d442[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d442[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d442[7:0] ;
  assign x__h73703 = r_s01[256] ? r_cur[503:496] : r_cur[247:240] ;
  assign x__h73842 =
	     _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d454[8] ?
	       -_0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d454[7:0] :
	       _0_CONCAT_IF_r_s01_read__1_BIT_256_8_THEN_r_cur_ETC___d454[7:0] ;
  assign x__h73888 = r_s01[256] ? r_cur[511:504] : r_cur[255:248] ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        fifo_out_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      532'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	r_cnt <= `BSV_ASSIGNMENT_DELAY 7'd127;
	r_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	r_status_dec <= `BSV_ASSIGNMENT_DELAY 5'd0;
	r_status_enc <= `BSV_ASSIGNMENT_DELAY 5'd0;
      end
    else
      begin
        if (fifo_out_rv$EN)
	  fifo_out_rv <= `BSV_ASSIGNMENT_DELAY fifo_out_rv$D_IN;
	if (r_cnt$EN) r_cnt <= `BSV_ASSIGNMENT_DELAY r_cnt$D_IN;
	if (r_done$EN) r_done <= `BSV_ASSIGNMENT_DELAY r_done$D_IN;
	if (r_status_dec$EN)
	  r_status_dec <= `BSV_ASSIGNMENT_DELAY r_status_dec$D_IN;
	if (r_status_enc$EN)
	  r_status_enc <= `BSV_ASSIGNMENT_DELAY r_status_enc$D_IN;
      end
    if (r_bestMode$EN) r_bestMode <= `BSV_ASSIGNMENT_DELAY r_bestMode$D_IN;
    if (r_bestPred$EN) r_bestPred <= `BSV_ASSIGNMENT_DELAY r_bestPred$D_IN;
    if (r_bestRecon$EN) r_bestRecon <= `BSV_ASSIGNMENT_DELAY r_bestRecon$D_IN;
    if (r_bestSad$EN) r_bestSad <= `BSV_ASSIGNMENT_DELAY r_bestSad$D_IN;
    if (r_cur$EN) r_cur <= `BSV_ASSIGNMENT_DELAY r_cur$D_IN;
    if (r_dcVal$EN) r_dcVal <= `BSV_ASSIGNMENT_DELAY r_dcVal$D_IN;
    if (r_planar_dx$EN) r_planar_dx <= `BSV_ASSIGNMENT_DELAY r_planar_dx$D_IN;
    if (r_planar_dy$EN) r_planar_dy <= `BSV_ASSIGNMENT_DELAY r_planar_dy$D_IN;
    if (r_qp$EN) r_qp <= `BSV_ASSIGNMENT_DELAY r_qp$D_IN;
    if (r_ref$EN) r_ref <= `BSV_ASSIGNMENT_DELAY r_ref$D_IN;
    if (r_s00$EN) r_s00 <= `BSV_ASSIGNMENT_DELAY r_s00$D_IN;
    if (r_s01$EN) r_s01 <= `BSV_ASSIGNMENT_DELAY r_s01$D_IN;
    if (r_s01_tmpMode$EN)
      r_s01_tmpMode <= `BSV_ASSIGNMENT_DELAY r_s01_tmpMode$D_IN;
    if (r_s01_tmpPred$EN)
      r_s01_tmpPred <= `BSV_ASSIGNMENT_DELAY r_s01_tmpPred$D_IN;
    if (r_s01_tmpSum$EN)
      r_s01_tmpSum <= `BSV_ASSIGNMENT_DELAY r_s01_tmpSum$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    fifo_out_rv =
	533'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    r_bestMode = 6'h2A;
    r_bestPred =
	512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    r_bestRecon =
	512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    r_bestSad = 14'h2AAA;
    r_cnt = 7'h2A;
    r_cur =
	512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    r_dcVal = 8'hAA;
    r_done = 1'h0;
    r_planar_dx = 88'hAAAAAAAAAAAAAAAAAAAAAA;
    r_planar_dy = 88'hAAAAAAAAAAAAAAAAAAAAAA;
    r_qp = 6'h2A;
    r_ref =
	264'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    r_s00 =
	903'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    r_s01 =
	263'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    r_s01_tmpMode = 7'h2A;
    r_s01_tmpPred =
	512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    r_s01_tmpSum = 26'h2AAAAAA;
    r_status_dec = 5'h0A;
    r_status_enc = 5'h0A;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkIntraPred8

