//
// Generated by Bluespec Compiler, version 2021.06.chen (build f2da894e, 2021-06-19)
//
// On Wed Jun 23 21:36:41 CST 2021
//
//
// Ports:
// Name                         I/O  size props
// RDY_startPred                  O     1
// io_out_get                     O   532
// RDY_io_out_get                 O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// startPred_xRef                 I   264
// startPred_cur                  I   512 reg
// startPred_dcVal                I     8 reg
// EN_startPred                   I     1
// EN_io_out_get                  I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkIntraPred8(CLK,
		    RST_N,

		    startPred_xRef,
		    startPred_cur,
		    startPred_dcVal,
		    EN_startPred,
		    RDY_startPred,

		    EN_io_out_get,
		    io_out_get,
		    RDY_io_out_get);
  input  CLK;
  input  RST_N;

  // action method startPred
  input  [263 : 0] startPred_xRef;
  input  [511 : 0] startPred_cur;
  input  [7 : 0] startPred_dcVal;
  input  EN_startPred;
  output RDY_startPred;

  // actionvalue method io_out_get
  input  EN_io_out_get;
  output [531 : 0] io_out_get;
  output RDY_io_out_get;

  // signals for module outputs
  wire [531 : 0] io_out_get;
  wire RDY_io_out_get, RDY_startPred;

  // inlined wires
  wire [532 : 0] fifo_out_rv$port0__write_1,
		 fifo_out_rv$port1__read,
		 fifo_out_rv$port1__write_1,
		 fifo_out_rv$port2__read;
  wire fifo_out_rv$EN_port1__write;

  // register fifo_out_rv
  reg [532 : 0] fifo_out_rv;
  wire [532 : 0] fifo_out_rv$D_IN;
  wire fifo_out_rv$EN;

  // register r_bestMode
  reg [5 : 0] r_bestMode;
  wire [5 : 0] r_bestMode$D_IN;
  wire r_bestMode$EN;

  // register r_bestPred
  reg [511 : 0] r_bestPred;
  wire [511 : 0] r_bestPred$D_IN;
  wire r_bestPred$EN;

  // register r_bestRecon
  reg [511 : 0] r_bestRecon;
  wire [511 : 0] r_bestRecon$D_IN;
  wire r_bestRecon$EN;

  // register r_bestSad
  reg [13 : 0] r_bestSad;
  wire [13 : 0] r_bestSad$D_IN;
  wire r_bestSad$EN;

  // register r_cnt
  reg [6 : 0] r_cnt;
  wire [6 : 0] r_cnt$D_IN;
  wire r_cnt$EN;

  // register r_cur
  reg [511 : 0] r_cur;
  wire [511 : 0] r_cur$D_IN;
  wire r_cur$EN;

  // register r_dcVal
  reg [7 : 0] r_dcVal;
  wire [7 : 0] r_dcVal$D_IN;
  wire r_dcVal$EN;

  // register r_done
  reg r_done;
  wire r_done$D_IN, r_done$EN;

  // register r_planar_dx
  reg [87 : 0] r_planar_dx;
  wire [87 : 0] r_planar_dx$D_IN;
  wire r_planar_dx$EN;

  // register r_planar_dy
  reg [87 : 0] r_planar_dy;
  wire [87 : 0] r_planar_dy$D_IN;
  wire r_planar_dy$EN;

  // register r_qp
  reg [5 : 0] r_qp;
  wire [5 : 0] r_qp$D_IN;
  wire r_qp$EN;

  // register r_ref
  reg [263 : 0] r_ref;
  wire [263 : 0] r_ref$D_IN;
  wire r_ref$EN;

  // register r_s00
  reg [902 : 0] r_s00;
  wire [902 : 0] r_s00$D_IN;
  wire r_s00$EN;

  // register r_s01
  reg [262 : 0] r_s01;
  wire [262 : 0] r_s01$D_IN;
  wire r_s01$EN;

  // register r_s01_tmpMode
  reg [6 : 0] r_s01_tmpMode;
  wire [6 : 0] r_s01_tmpMode$D_IN;
  wire r_s01_tmpMode$EN;

  // register r_s01_tmpPred
  reg [511 : 0] r_s01_tmpPred;
  wire [511 : 0] r_s01_tmpPred$D_IN;
  wire r_s01_tmpPred$EN;

  // register r_s01_tmpSum
  reg [25 : 0] r_s01_tmpSum;
  wire [25 : 0] r_s01_tmpSum$D_IN;
  wire r_s01_tmpSum$EN;

  // register r_status_dec
  reg [4 : 0] r_status_dec;
  wire [4 : 0] r_status_dec$D_IN;
  wire r_status_dec$EN;

  // register r_status_enc
  reg [4 : 0] r_status_enc;
  wire [4 : 0] r_status_enc$D_IN;
  wire r_status_enc$EN;

  // ports of submodule rf_rom_m0
  wire [191 : 0] rf_rom_m0$D_IN, rf_rom_m0$D_OUT_1;
  wire [6 : 0] rf_rom_m0$ADDR_1,
	       rf_rom_m0$ADDR_2,
	       rf_rom_m0$ADDR_3,
	       rf_rom_m0$ADDR_4,
	       rf_rom_m0$ADDR_5,
	       rf_rom_m0$ADDR_IN;
  wire rf_rom_m0$WE;

  // ports of submodule rf_rom_m1
  wire [191 : 0] rf_rom_m1$D_IN, rf_rom_m1$D_OUT_1;
  wire [6 : 0] rf_rom_m1$ADDR_1,
	       rf_rom_m1$ADDR_2,
	       rf_rom_m1$ADDR_3,
	       rf_rom_m1$ADDR_4,
	       rf_rom_m1$ADDR_5,
	       rf_rom_m1$ADDR_IN;
  wire rf_rom_m1$WE;

  // ports of submodule rf_rom_x0
  wire [255 : 0] rf_rom_x0$D_IN, rf_rom_x0$D_OUT_1;
  wire [6 : 0] rf_rom_x0$ADDR_1,
	       rf_rom_x0$ADDR_2,
	       rf_rom_x0$ADDR_3,
	       rf_rom_x0$ADDR_4,
	       rf_rom_x0$ADDR_5,
	       rf_rom_x0$ADDR_IN;
  wire rf_rom_x0$WE;

  // ports of submodule rf_rom_x1
  wire [255 : 0] rf_rom_x1$D_IN, rf_rom_x1$D_OUT_1;
  wire [6 : 0] rf_rom_x1$ADDR_1,
	       rf_rom_x1$ADDR_2,
	       rf_rom_x1$ADDR_3,
	       rf_rom_x1$ADDR_4,
	       rf_rom_x1$ADDR_5,
	       rf_rom_x1$ADDR_IN;
  wire rf_rom_x1$WE;

  // inputs to muxes for submodule ports
  wire [87 : 0] MUX_r_planar_dx$write_1__VAL_2,
		MUX_r_planar_dy$write_1__VAL_1,
		MUX_r_planar_dy$write_1__VAL_2;
  wire [6 : 0] MUX_r_cnt$write_1__VAL_1;
  wire MUX_r_bestSad$write_1__PSEL_1,
       MUX_r_bestSad$write_1__SEL_1,
       MUX_r_planar_dx$write_1__SEL_1;

  // remaining internal signals
  wire [255 : 0] mkFlt8x4___d36;
  wire [21 : 0] _3_MUL_0_CONCAT_startPred_xRef_BITS_207_TO_200__ETC___d513,
		_3_MUL_0_CONCAT_startPred_xRef_BITS_79_TO_72_86_87___d497,
		_5_MUL_0_CONCAT_startPred_xRef_BITS_207_TO_200__ETC___d509,
		_5_MUL_0_CONCAT_startPred_xRef_BITS_79_TO_72_86_87___d493,
		_6_MUL_0_CONCAT_startPred_xRef_BITS_207_TO_200__ETC___d507,
		_6_MUL_0_CONCAT_startPred_xRef_BITS_79_TO_72_86_87___d491,
		_7_MUL_0_CONCAT_startPred_xRef_BITS_207_TO_200__ETC___d504,
		_7_MUL_0_CONCAT_startPred_xRef_BITS_79_TO_72_86_87___d488;
  wire [13 : 0] xSad__h74383;
  wire [12 : 0] _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__9_BIT_256__ETC___d149,
		_0_CONCAT_IF_0_CONCAT_IF_r_s01_read__9_BIT_256__ETC___d201,
		_0_CONCAT_IF_0_CONCAT_IF_r_s01_read__9_BIT_256__ETC___d252,
		_0_CONCAT_IF_0_CONCAT_IF_r_s01_read__9_BIT_256__ETC___d305,
		_0_CONCAT_IF_0_CONCAT_IF_r_s01_read__9_BIT_256__ETC___d356,
		_0_CONCAT_IF_0_CONCAT_IF_r_s01_read__9_BIT_256__ETC___d408,
		_0_CONCAT_IF_0_CONCAT_IF_r_s01_read__9_BIT_256__ETC___d459,
		_0_CONCAT_IF_0_CONCAT_IF_r_s01_read__9_BIT_256__ETC___d462,
		_0_CONCAT_IF_0_CONCAT_IF_r_s01_read__9_BIT_256__ETC___d98;
  wire [8 : 0] _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d105,
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d117,
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d130,
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d142,
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d157,
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d169,
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d182,
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d194,
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d208,
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d220,
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d233,
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d245,
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d261,
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d273,
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d286,
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d298,
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d312,
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d324,
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d337,
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d349,
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d364,
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d376,
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d389,
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d401,
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d415,
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d427,
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d440,
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d452,
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d54,
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d66,
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d79,
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d91;
  wire [7 : 0] x__h67511,
	       x__h67559,
	       x__h68355,
	       x__h68401,
	       x__h68549,
	       x__h68595,
	       x__h68734,
	       x__h68780,
	       x__h68937,
	       x__h68983,
	       x__h69122,
	       x__h69168,
	       x__h69316,
	       x__h69362,
	       x__h69501,
	       x__h69547,
	       x__h69713,
	       x__h69759,
	       x__h69898,
	       x__h69944,
	       x__h70092,
	       x__h70138,
	       x__h70277,
	       x__h70323,
	       x__h70480,
	       x__h70526,
	       x__h70665,
	       x__h70711,
	       x__h70859,
	       x__h70905,
	       x__h71044,
	       x__h71090,
	       x__h71265,
	       x__h71311,
	       x__h71450,
	       x__h71496,
	       x__h71644,
	       x__h71690,
	       x__h71829,
	       x__h71875,
	       x__h72032,
	       x__h72078,
	       x__h72217,
	       x__h72263,
	       x__h72411,
	       x__h72457,
	       x__h72596,
	       x__h72642,
	       x__h72808,
	       x__h72854,
	       x__h72993,
	       x__h73039,
	       x__h73187,
	       x__h73233,
	       x__h73372,
	       x__h73418,
	       x__h73575,
	       x__h73621,
	       x__h73760,
	       x__h73806,
	       x__h73954,
	       x__h74000,
	       x__h74139,
	       x__h74185;
  wire _0_CONCAT_r_s01_tmpSum_read__4_BITS_12_TO_0_5_6_ETC___d474,
       x0__h1415,
       x1__h1416;

  // action method startPred
  assign RDY_startPred = r_status_enc[3:0] == 4'd0 ;

  // actionvalue method io_out_get
  assign io_out_get = fifo_out_rv[531:0] ;
  assign RDY_io_out_get = fifo_out_rv[532] ;

  // submodule rf_rom_m0
  RegFileLoad #(.file("tbl_intra_m0.hex"),
		.addr_width(32'd7),
		.data_width(32'd192),
		.lo(7'd0),
		.hi(7'd69),
		.binary(1'd0)) rf_rom_m0(.CLK(CLK),
					 .ADDR_1(rf_rom_m0$ADDR_1),
					 .ADDR_2(rf_rom_m0$ADDR_2),
					 .ADDR_3(rf_rom_m0$ADDR_3),
					 .ADDR_4(rf_rom_m0$ADDR_4),
					 .ADDR_5(rf_rom_m0$ADDR_5),
					 .ADDR_IN(rf_rom_m0$ADDR_IN),
					 .D_IN(rf_rom_m0$D_IN),
					 .WE(rf_rom_m0$WE),
					 .D_OUT_1(rf_rom_m0$D_OUT_1),
					 .D_OUT_2(),
					 .D_OUT_3(),
					 .D_OUT_4(),
					 .D_OUT_5());

  // submodule rf_rom_m1
  RegFileLoad #(.file("tbl_intra_m1.hex"),
		.addr_width(32'd7),
		.data_width(32'd192),
		.lo(7'd0),
		.hi(7'd69),
		.binary(1'd0)) rf_rom_m1(.CLK(CLK),
					 .ADDR_1(rf_rom_m1$ADDR_1),
					 .ADDR_2(rf_rom_m1$ADDR_2),
					 .ADDR_3(rf_rom_m1$ADDR_3),
					 .ADDR_4(rf_rom_m1$ADDR_4),
					 .ADDR_5(rf_rom_m1$ADDR_5),
					 .ADDR_IN(rf_rom_m1$ADDR_IN),
					 .D_IN(rf_rom_m1$D_IN),
					 .WE(rf_rom_m1$WE),
					 .D_OUT_1(rf_rom_m1$D_OUT_1),
					 .D_OUT_2(),
					 .D_OUT_3(),
					 .D_OUT_4(),
					 .D_OUT_5());

  // submodule rf_rom_x0
  RegFileLoad #(.file("tbl_intra_x0.hex"),
		.addr_width(32'd7),
		.data_width(32'd256),
		.lo(7'd0),
		.hi(7'd69),
		.binary(1'd0)) rf_rom_x0(.CLK(CLK),
					 .ADDR_1(rf_rom_x0$ADDR_1),
					 .ADDR_2(rf_rom_x0$ADDR_2),
					 .ADDR_3(rf_rom_x0$ADDR_3),
					 .ADDR_4(rf_rom_x0$ADDR_4),
					 .ADDR_5(rf_rom_x0$ADDR_5),
					 .ADDR_IN(rf_rom_x0$ADDR_IN),
					 .D_IN(rf_rom_x0$D_IN),
					 .WE(rf_rom_x0$WE),
					 .D_OUT_1(rf_rom_x0$D_OUT_1),
					 .D_OUT_2(),
					 .D_OUT_3(),
					 .D_OUT_4(),
					 .D_OUT_5());

  // submodule rf_rom_x1
  RegFileLoad #(.file("tbl_intra_x1.hex"),
		.addr_width(32'd7),
		.data_width(32'd256),
		.lo(7'd0),
		.hi(7'd69),
		.binary(1'd0)) rf_rom_x1(.CLK(CLK),
					 .ADDR_1(rf_rom_x1$ADDR_1),
					 .ADDR_2(rf_rom_x1$ADDR_2),
					 .ADDR_3(rf_rom_x1$ADDR_3),
					 .ADDR_4(rf_rom_x1$ADDR_4),
					 .ADDR_5(rf_rom_x1$ADDR_5),
					 .ADDR_IN(rf_rom_x1$ADDR_IN),
					 .D_IN(rf_rom_x1$D_IN),
					 .WE(rf_rom_x1$WE),
					 .D_OUT_1(rf_rom_x1$D_OUT_1),
					 .D_OUT_2(),
					 .D_OUT_3(),
					 .D_OUT_4(),
					 .D_OUT_5());

  // inputs to muxes for submodule ports
  assign MUX_r_bestSad$write_1__PSEL_1 = r_status_enc[3] && r_s01_tmpMode[0] ;
  assign MUX_r_bestSad$write_1__SEL_1 =
	     MUX_r_bestSad$write_1__PSEL_1 &&
	     _0_CONCAT_r_s01_tmpSum_read__4_BITS_12_TO_0_5_6_ETC___d474 ;
  assign MUX_r_planar_dx$write_1__SEL_1 = r_status_enc[1] && r_s00[896] ;
  assign MUX_r_cnt$write_1__VAL_1 = r_cnt + 7'd1 ;
  assign MUX_r_planar_dx$write_1__VAL_2 =
	     { startPred_xRef[79:72],
	       3'd0,
	       _7_MUL_0_CONCAT_startPred_xRef_BITS_79_TO_72_86_87___d488[10:0],
	       _6_MUL_0_CONCAT_startPred_xRef_BITS_79_TO_72_86_87___d491[10:0],
	       _5_MUL_0_CONCAT_startPred_xRef_BITS_79_TO_72_86_87___d493[10:0],
	       1'd0,
	       startPred_xRef[79:72],
	       2'd0,
	       _3_MUL_0_CONCAT_startPred_xRef_BITS_79_TO_72_86_87___d497[10:0],
	       2'd0,
	       startPred_xRef[79:72],
	       4'd0,
	       startPred_xRef[79:72] } ;
  assign MUX_r_planar_dy$write_1__VAL_1 = { 44'd0, r_planar_dy[87:44] } ;
  assign MUX_r_planar_dy$write_1__VAL_2 =
	     { startPred_xRef[207:200],
	       3'd0,
	       _7_MUL_0_CONCAT_startPred_xRef_BITS_207_TO_200__ETC___d504[10:0],
	       _6_MUL_0_CONCAT_startPred_xRef_BITS_207_TO_200__ETC___d507[10:0],
	       _5_MUL_0_CONCAT_startPred_xRef_BITS_207_TO_200__ETC___d509[10:0],
	       1'd0,
	       startPred_xRef[207:200],
	       2'd0,
	       _3_MUL_0_CONCAT_startPred_xRef_BITS_207_TO_200__ETC___d513[10:0],
	       2'd0,
	       startPred_xRef[207:200],
	       4'd0,
	       startPred_xRef[207:200] } ;

  // inlined wires
  assign fifo_out_rv$port0__write_1 =
	     { 1'd0,
	       532'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign fifo_out_rv$port1__read =
	     EN_io_out_get ? fifo_out_rv$port0__write_1 : fifo_out_rv ;
  assign fifo_out_rv$EN_port1__write =
	     !fifo_out_rv$port1__read[532] && r_status_dec[0] ;
  assign fifo_out_rv$port1__write_1 =
	     { 1'd1, r_bestMode, r_bestSad, r_bestPred } ;
  assign fifo_out_rv$port2__read =
	     fifo_out_rv$EN_port1__write ?
	       fifo_out_rv$port1__write_1 :
	       fifo_out_rv$port1__read ;

  // register fifo_out_rv
  assign fifo_out_rv$D_IN = fifo_out_rv$port2__read ;
  assign fifo_out_rv$EN = 1'b1 ;

  // register r_bestMode
  assign r_bestMode$D_IN = r_s01_tmpMode[6:1] ;
  assign r_bestMode$EN = MUX_r_bestSad$write_1__SEL_1 ;

  // register r_bestPred
  assign r_bestPred$D_IN = r_s01_tmpPred ;
  assign r_bestPred$EN = MUX_r_bestSad$write_1__SEL_1 ;

  // register r_bestRecon
  assign r_bestRecon$D_IN = 512'h0 ;
  assign r_bestRecon$EN = 1'b0 ;

  // register r_bestSad
  assign r_bestSad$D_IN =
	     MUX_r_bestSad$write_1__SEL_1 ? xSad__h74383 : 14'd16383 ;
  assign r_bestSad$EN =
	     MUX_r_bestSad$write_1__PSEL_1 &&
	     _0_CONCAT_r_s01_tmpSum_read__4_BITS_12_TO_0_5_6_ETC___d474 ||
	     EN_startPred ;

  // register r_cnt
  assign r_cnt$D_IN = r_status_enc[0] ? MUX_r_cnt$write_1__VAL_1 : 7'd0 ;
  assign r_cnt$EN = r_status_enc[0] || EN_startPred ;

  // register r_cur
  assign r_cur$D_IN = startPred_cur ;
  assign r_cur$EN = EN_startPred ;

  // register r_dcVal
  assign r_dcVal$D_IN = startPred_dcVal ;
  assign r_dcVal$EN = EN_startPred ;

  // register r_done
  assign r_done$D_IN = 1'b0 ;
  assign r_done$EN = 1'b0 ;

  // register r_planar_dx
  assign r_planar_dx$D_IN =
	     MUX_r_planar_dx$write_1__SEL_1 ?
	       88'd0 :
	       MUX_r_planar_dx$write_1__VAL_2 ;
  assign r_planar_dx$EN = r_status_enc[1] && r_s00[896] || EN_startPred ;

  // register r_planar_dy
  assign r_planar_dy$D_IN =
	     r_status_enc[1] ?
	       MUX_r_planar_dy$write_1__VAL_1 :
	       MUX_r_planar_dy$write_1__VAL_2 ;
  assign r_planar_dy$EN = r_status_enc[1] || EN_startPred ;

  // register r_qp
  assign r_qp$D_IN = 6'h0 ;
  assign r_qp$EN = 1'b0 ;

  // register r_ref
  assign r_ref$D_IN = startPred_xRef ;
  assign r_ref$EN = EN_startPred ;

  // register r_s00
  assign r_s00$D_IN =
	     { r_cnt,
	       rf_rom_m0$D_OUT_1,
	       rf_rom_m1$D_OUT_1,
	       rf_rom_x0$D_OUT_1,
	       rf_rom_x1$D_OUT_1 } ;
  assign r_s00$EN = r_status_enc[0] ;

  // register r_s01
  assign r_s01$D_IN = { r_s00[902:896], mkFlt8x4___d36 } ;
  assign r_s01$EN = r_status_enc[1] ;

  // register r_s01_tmpMode
  assign r_s01_tmpMode$D_IN = r_s01[262:256] ;
  assign r_s01_tmpMode$EN = r_status_enc[2] ;

  // register r_s01_tmpPred
  assign r_s01_tmpPred$D_IN = { r_s01[255:0], r_s01_tmpPred[511:256] } ;
  assign r_s01_tmpPred$EN = r_status_enc[2] ;

  // register r_s01_tmpSum
  assign r_s01_tmpSum$D_IN =
	     { r_s01_tmpSum[12:0],
	       _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__9_BIT_256__ETC___d462 } ;
  assign r_s01_tmpSum$EN = r_status_enc[2] ;

  // register r_status_dec
  assign r_status_dec$D_IN = { r_status_dec[3:0], x1__h1416 } ;
  assign r_status_dec$EN = 1'd1 ;

  // register r_status_enc
  assign r_status_enc$D_IN = { r_status_enc[3:0], x0__h1415 } ;
  assign r_status_enc$EN = 1'd1 ;

  // submodule rf_rom_m0
  assign rf_rom_m0$ADDR_1 = r_cnt ;
  assign rf_rom_m0$ADDR_2 = 7'h0 ;
  assign rf_rom_m0$ADDR_3 = 7'h0 ;
  assign rf_rom_m0$ADDR_4 = 7'h0 ;
  assign rf_rom_m0$ADDR_5 = 7'h0 ;
  assign rf_rom_m0$ADDR_IN = 7'h0 ;
  assign rf_rom_m0$D_IN = 192'h0 ;
  assign rf_rom_m0$WE = 1'b0 ;

  // submodule rf_rom_m1
  assign rf_rom_m1$ADDR_1 = r_cnt ;
  assign rf_rom_m1$ADDR_2 = 7'h0 ;
  assign rf_rom_m1$ADDR_3 = 7'h0 ;
  assign rf_rom_m1$ADDR_4 = 7'h0 ;
  assign rf_rom_m1$ADDR_5 = 7'h0 ;
  assign rf_rom_m1$ADDR_IN = 7'h0 ;
  assign rf_rom_m1$D_IN = 192'h0 ;
  assign rf_rom_m1$WE = 1'b0 ;

  // submodule rf_rom_x0
  assign rf_rom_x0$ADDR_1 = r_cnt ;
  assign rf_rom_x0$ADDR_2 = 7'h0 ;
  assign rf_rom_x0$ADDR_3 = 7'h0 ;
  assign rf_rom_x0$ADDR_4 = 7'h0 ;
  assign rf_rom_x0$ADDR_5 = 7'h0 ;
  assign rf_rom_x0$ADDR_IN = 7'h0 ;
  assign rf_rom_x0$D_IN = 256'h0 ;
  assign rf_rom_x0$WE = 1'b0 ;

  // submodule rf_rom_x1
  assign rf_rom_x1$ADDR_1 = r_cnt ;
  assign rf_rom_x1$ADDR_2 = 7'h0 ;
  assign rf_rom_x1$ADDR_3 = 7'h0 ;
  assign rf_rom_x1$ADDR_4 = 7'h0 ;
  assign rf_rom_x1$ADDR_5 = 7'h0 ;
  assign rf_rom_x1$ADDR_IN = 7'h0 ;
  assign rf_rom_x1$D_IN = 256'h0 ;
  assign rf_rom_x1$WE = 1'b0 ;

  // remaining internal signals
  module_mkFlt8x4 instance_mkFlt8x4_0(.mkFlt8x4_xRef({ r_dcVal, r_ref }),
				      .mkFlt8x4_dx(r_planar_dx),
				      .mkFlt8x4_dy(r_planar_dy[43:0]),
				      .mkFlt8x4_m0(r_s00[895:704]),
				      .mkFlt8x4_m1(r_s00[703:512]),
				      .mkFlt8x4_x0(r_s00[511:256]),
				      .mkFlt8x4_x1(r_s00[255:0]),
				      .mkFlt8x4(mkFlt8x4___d36));
  assign _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__9_BIT_256__ETC___d149 =
	     { 5'd0, x__h68937 } + { 5'd0, x__h69122 } + { 5'd0, x__h69316 } +
	     { 5'd0, x__h69501 } ;
  assign _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__9_BIT_256__ETC___d201 =
	     { 5'd0, x__h69713 } + { 5'd0, x__h69898 } + { 5'd0, x__h70092 } +
	     { 5'd0, x__h70277 } ;
  assign _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__9_BIT_256__ETC___d252 =
	     { 5'd0, x__h70480 } + { 5'd0, x__h70665 } + { 5'd0, x__h70859 } +
	     { 5'd0, x__h71044 } ;
  assign _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__9_BIT_256__ETC___d305 =
	     { 5'd0, x__h71265 } + { 5'd0, x__h71450 } + { 5'd0, x__h71644 } +
	     { 5'd0, x__h71829 } ;
  assign _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__9_BIT_256__ETC___d356 =
	     { 5'd0, x__h72032 } + { 5'd0, x__h72217 } + { 5'd0, x__h72411 } +
	     { 5'd0, x__h72596 } ;
  assign _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__9_BIT_256__ETC___d408 =
	     { 5'd0, x__h72808 } + { 5'd0, x__h72993 } + { 5'd0, x__h73187 } +
	     { 5'd0, x__h73372 } ;
  assign _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__9_BIT_256__ETC___d459 =
	     { 5'd0, x__h73575 } + { 5'd0, x__h73760 } + { 5'd0, x__h73954 } +
	     { 5'd0, x__h74139 } ;
  assign _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__9_BIT_256__ETC___d462 =
	     _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__9_BIT_256__ETC___d98 +
	     _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__9_BIT_256__ETC___d149 +
	     _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__9_BIT_256__ETC___d201 +
	     _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__9_BIT_256__ETC___d252 +
	     _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__9_BIT_256__ETC___d305 +
	     _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__9_BIT_256__ETC___d356 +
	     _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__9_BIT_256__ETC___d408 +
	     _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__9_BIT_256__ETC___d459 ;
  assign _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__9_BIT_256__ETC___d98 =
	     { 5'd0, x__h67511 } + { 5'd0, x__h68355 } + { 5'd0, x__h68549 } +
	     { 5'd0, x__h68734 } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d105 =
	     { 1'd0, x__h68983 } - { 1'd0, r_s01[39:32] } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d117 =
	     { 1'd0, x__h69168 } - { 1'd0, r_s01[47:40] } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d130 =
	     { 1'd0, x__h69362 } - { 1'd0, r_s01[55:48] } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d142 =
	     { 1'd0, x__h69547 } - { 1'd0, r_s01[63:56] } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d157 =
	     { 1'd0, x__h69759 } - { 1'd0, r_s01[71:64] } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d169 =
	     { 1'd0, x__h69944 } - { 1'd0, r_s01[79:72] } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d182 =
	     { 1'd0, x__h70138 } - { 1'd0, r_s01[87:80] } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d194 =
	     { 1'd0, x__h70323 } - { 1'd0, r_s01[95:88] } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d208 =
	     { 1'd0, x__h70526 } - { 1'd0, r_s01[103:96] } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d220 =
	     { 1'd0, x__h70711 } - { 1'd0, r_s01[111:104] } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d233 =
	     { 1'd0, x__h70905 } - { 1'd0, r_s01[119:112] } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d245 =
	     { 1'd0, x__h71090 } - { 1'd0, r_s01[127:120] } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d261 =
	     { 1'd0, x__h71311 } - { 1'd0, r_s01[135:128] } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d273 =
	     { 1'd0, x__h71496 } - { 1'd0, r_s01[143:136] } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d286 =
	     { 1'd0, x__h71690 } - { 1'd0, r_s01[151:144] } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d298 =
	     { 1'd0, x__h71875 } - { 1'd0, r_s01[159:152] } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d312 =
	     { 1'd0, x__h72078 } - { 1'd0, r_s01[167:160] } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d324 =
	     { 1'd0, x__h72263 } - { 1'd0, r_s01[175:168] } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d337 =
	     { 1'd0, x__h72457 } - { 1'd0, r_s01[183:176] } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d349 =
	     { 1'd0, x__h72642 } - { 1'd0, r_s01[191:184] } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d364 =
	     { 1'd0, x__h72854 } - { 1'd0, r_s01[199:192] } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d376 =
	     { 1'd0, x__h73039 } - { 1'd0, r_s01[207:200] } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d389 =
	     { 1'd0, x__h73233 } - { 1'd0, r_s01[215:208] } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d401 =
	     { 1'd0, x__h73418 } - { 1'd0, r_s01[223:216] } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d415 =
	     { 1'd0, x__h73621 } - { 1'd0, r_s01[231:224] } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d427 =
	     { 1'd0, x__h73806 } - { 1'd0, r_s01[239:232] } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d440 =
	     { 1'd0, x__h74000 } - { 1'd0, r_s01[247:240] } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d452 =
	     { 1'd0, x__h74185 } - { 1'd0, r_s01[255:248] } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d54 =
	     { 1'd0, x__h67559 } - { 1'd0, r_s01[7:0] } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d66 =
	     { 1'd0, x__h68401 } - { 1'd0, r_s01[15:8] } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d79 =
	     { 1'd0, x__h68595 } - { 1'd0, r_s01[23:16] } ;
  assign _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d91 =
	     { 1'd0, x__h68780 } - { 1'd0, r_s01[31:24] } ;
  assign _0_CONCAT_r_s01_tmpSum_read__4_BITS_12_TO_0_5_6_ETC___d474 =
	     xSad__h74383 < r_bestSad ;
  assign _3_MUL_0_CONCAT_startPred_xRef_BITS_207_TO_200__ETC___d513 =
	     11'd3 * { 3'd0, startPred_xRef[207:200] } ;
  assign _3_MUL_0_CONCAT_startPred_xRef_BITS_79_TO_72_86_87___d497 =
	     11'd3 * { 3'd0, startPred_xRef[79:72] } ;
  assign _5_MUL_0_CONCAT_startPred_xRef_BITS_207_TO_200__ETC___d509 =
	     11'd5 * { 3'd0, startPred_xRef[207:200] } ;
  assign _5_MUL_0_CONCAT_startPred_xRef_BITS_79_TO_72_86_87___d493 =
	     11'd5 * { 3'd0, startPred_xRef[79:72] } ;
  assign _6_MUL_0_CONCAT_startPred_xRef_BITS_207_TO_200__ETC___d507 =
	     11'd6 * { 3'd0, startPred_xRef[207:200] } ;
  assign _6_MUL_0_CONCAT_startPred_xRef_BITS_79_TO_72_86_87___d491 =
	     11'd6 * { 3'd0, startPred_xRef[79:72] } ;
  assign _7_MUL_0_CONCAT_startPred_xRef_BITS_207_TO_200__ETC___d504 =
	     11'd7 * { 3'd0, startPred_xRef[207:200] } ;
  assign _7_MUL_0_CONCAT_startPred_xRef_BITS_79_TO_72_86_87___d488 =
	     11'd7 * { 3'd0, startPred_xRef[79:72] } ;
  assign x0__h1415 = EN_startPred || r_cnt < 7'd69 ;
  assign x1__h1416 =
	     MUX_r_bestSad$write_1__PSEL_1 && r_s01_tmpMode[6:1] == 6'd34 ;
  assign xSad__h74383 =
	     { 1'd0, r_s01_tmpSum[12:0] } + { 1'd0, r_s01_tmpSum[25:13] } ;
  assign x__h67511 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d54[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d54[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d54[7:0] ;
  assign x__h67559 = r_s01[256] ? r_cur[263:256] : r_cur[7:0] ;
  assign x__h68355 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d66[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d66[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d66[7:0] ;
  assign x__h68401 = r_s01[256] ? r_cur[271:264] : r_cur[15:8] ;
  assign x__h68549 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d79[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d79[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d79[7:0] ;
  assign x__h68595 = r_s01[256] ? r_cur[279:272] : r_cur[23:16] ;
  assign x__h68734 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d91[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d91[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d91[7:0] ;
  assign x__h68780 = r_s01[256] ? r_cur[287:280] : r_cur[31:24] ;
  assign x__h68937 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d105[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d105[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d105[7:0] ;
  assign x__h68983 = r_s01[256] ? r_cur[295:288] : r_cur[39:32] ;
  assign x__h69122 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d117[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d117[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d117[7:0] ;
  assign x__h69168 = r_s01[256] ? r_cur[303:296] : r_cur[47:40] ;
  assign x__h69316 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d130[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d130[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d130[7:0] ;
  assign x__h69362 = r_s01[256] ? r_cur[311:304] : r_cur[55:48] ;
  assign x__h69501 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d142[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d142[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d142[7:0] ;
  assign x__h69547 = r_s01[256] ? r_cur[319:312] : r_cur[63:56] ;
  assign x__h69713 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d157[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d157[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d157[7:0] ;
  assign x__h69759 = r_s01[256] ? r_cur[327:320] : r_cur[71:64] ;
  assign x__h69898 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d169[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d169[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d169[7:0] ;
  assign x__h69944 = r_s01[256] ? r_cur[335:328] : r_cur[79:72] ;
  assign x__h70092 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d182[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d182[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d182[7:0] ;
  assign x__h70138 = r_s01[256] ? r_cur[343:336] : r_cur[87:80] ;
  assign x__h70277 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d194[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d194[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d194[7:0] ;
  assign x__h70323 = r_s01[256] ? r_cur[351:344] : r_cur[95:88] ;
  assign x__h70480 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d208[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d208[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d208[7:0] ;
  assign x__h70526 = r_s01[256] ? r_cur[359:352] : r_cur[103:96] ;
  assign x__h70665 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d220[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d220[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d220[7:0] ;
  assign x__h70711 = r_s01[256] ? r_cur[367:360] : r_cur[111:104] ;
  assign x__h70859 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d233[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d233[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d233[7:0] ;
  assign x__h70905 = r_s01[256] ? r_cur[375:368] : r_cur[119:112] ;
  assign x__h71044 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d245[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d245[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d245[7:0] ;
  assign x__h71090 = r_s01[256] ? r_cur[383:376] : r_cur[127:120] ;
  assign x__h71265 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d261[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d261[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d261[7:0] ;
  assign x__h71311 = r_s01[256] ? r_cur[391:384] : r_cur[135:128] ;
  assign x__h71450 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d273[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d273[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d273[7:0] ;
  assign x__h71496 = r_s01[256] ? r_cur[399:392] : r_cur[143:136] ;
  assign x__h71644 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d286[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d286[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d286[7:0] ;
  assign x__h71690 = r_s01[256] ? r_cur[407:400] : r_cur[151:144] ;
  assign x__h71829 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d298[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d298[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d298[7:0] ;
  assign x__h71875 = r_s01[256] ? r_cur[415:408] : r_cur[159:152] ;
  assign x__h72032 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d312[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d312[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d312[7:0] ;
  assign x__h72078 = r_s01[256] ? r_cur[423:416] : r_cur[167:160] ;
  assign x__h72217 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d324[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d324[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d324[7:0] ;
  assign x__h72263 = r_s01[256] ? r_cur[431:424] : r_cur[175:168] ;
  assign x__h72411 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d337[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d337[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d337[7:0] ;
  assign x__h72457 = r_s01[256] ? r_cur[439:432] : r_cur[183:176] ;
  assign x__h72596 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d349[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d349[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d349[7:0] ;
  assign x__h72642 = r_s01[256] ? r_cur[447:440] : r_cur[191:184] ;
  assign x__h72808 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d364[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d364[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d364[7:0] ;
  assign x__h72854 = r_s01[256] ? r_cur[455:448] : r_cur[199:192] ;
  assign x__h72993 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d376[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d376[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d376[7:0] ;
  assign x__h73039 = r_s01[256] ? r_cur[463:456] : r_cur[207:200] ;
  assign x__h73187 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d389[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d389[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d389[7:0] ;
  assign x__h73233 = r_s01[256] ? r_cur[471:464] : r_cur[215:208] ;
  assign x__h73372 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d401[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d401[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d401[7:0] ;
  assign x__h73418 = r_s01[256] ? r_cur[479:472] : r_cur[223:216] ;
  assign x__h73575 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d415[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d415[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d415[7:0] ;
  assign x__h73621 = r_s01[256] ? r_cur[487:480] : r_cur[231:224] ;
  assign x__h73760 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d427[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d427[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d427[7:0] ;
  assign x__h73806 = r_s01[256] ? r_cur[495:488] : r_cur[239:232] ;
  assign x__h73954 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d440[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d440[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d440[7:0] ;
  assign x__h74000 = r_s01[256] ? r_cur[503:496] : r_cur[247:240] ;
  assign x__h74139 =
	     _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d452[8] ?
	       -_0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d452[7:0] :
	       _0_CONCAT_IF_r_s01_read__9_BIT_256_6_THEN_r_cur_ETC___d452[7:0] ;
  assign x__h74185 = r_s01[256] ? r_cur[511:504] : r_cur[255:248] ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        fifo_out_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      532'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	r_cnt <= `BSV_ASSIGNMENT_DELAY 7'd127;
	r_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	r_status_dec <= `BSV_ASSIGNMENT_DELAY 5'd0;
	r_status_enc <= `BSV_ASSIGNMENT_DELAY 5'd0;
      end
    else
      begin
        if (fifo_out_rv$EN)
	  fifo_out_rv <= `BSV_ASSIGNMENT_DELAY fifo_out_rv$D_IN;
	if (r_cnt$EN) r_cnt <= `BSV_ASSIGNMENT_DELAY r_cnt$D_IN;
	if (r_done$EN) r_done <= `BSV_ASSIGNMENT_DELAY r_done$D_IN;
	if (r_status_dec$EN)
	  r_status_dec <= `BSV_ASSIGNMENT_DELAY r_status_dec$D_IN;
	if (r_status_enc$EN)
	  r_status_enc <= `BSV_ASSIGNMENT_DELAY r_status_enc$D_IN;
      end
    if (r_bestMode$EN) r_bestMode <= `BSV_ASSIGNMENT_DELAY r_bestMode$D_IN;
    if (r_bestPred$EN) r_bestPred <= `BSV_ASSIGNMENT_DELAY r_bestPred$D_IN;
    if (r_bestRecon$EN) r_bestRecon <= `BSV_ASSIGNMENT_DELAY r_bestRecon$D_IN;
    if (r_bestSad$EN) r_bestSad <= `BSV_ASSIGNMENT_DELAY r_bestSad$D_IN;
    if (r_cur$EN) r_cur <= `BSV_ASSIGNMENT_DELAY r_cur$D_IN;
    if (r_dcVal$EN) r_dcVal <= `BSV_ASSIGNMENT_DELAY r_dcVal$D_IN;
    if (r_planar_dx$EN) r_planar_dx <= `BSV_ASSIGNMENT_DELAY r_planar_dx$D_IN;
    if (r_planar_dy$EN) r_planar_dy <= `BSV_ASSIGNMENT_DELAY r_planar_dy$D_IN;
    if (r_qp$EN) r_qp <= `BSV_ASSIGNMENT_DELAY r_qp$D_IN;
    if (r_ref$EN) r_ref <= `BSV_ASSIGNMENT_DELAY r_ref$D_IN;
    if (r_s00$EN) r_s00 <= `BSV_ASSIGNMENT_DELAY r_s00$D_IN;
    if (r_s01$EN) r_s01 <= `BSV_ASSIGNMENT_DELAY r_s01$D_IN;
    if (r_s01_tmpMode$EN)
      r_s01_tmpMode <= `BSV_ASSIGNMENT_DELAY r_s01_tmpMode$D_IN;
    if (r_s01_tmpPred$EN)
      r_s01_tmpPred <= `BSV_ASSIGNMENT_DELAY r_s01_tmpPred$D_IN;
    if (r_s01_tmpSum$EN)
      r_s01_tmpSum <= `BSV_ASSIGNMENT_DELAY r_s01_tmpSum$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    fifo_out_rv =
	533'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    r_bestMode = 6'h2A;
    r_bestPred =
	512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    r_bestRecon =
	512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    r_bestSad = 14'h2AAA;
    r_cnt = 7'h2A;
    r_cur =
	512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    r_dcVal = 8'hAA;
    r_done = 1'h0;
    r_planar_dx = 88'hAAAAAAAAAAAAAAAAAAAAAA;
    r_planar_dy = 88'hAAAAAAAAAAAAAAAAAAAAAA;
    r_qp = 6'h2A;
    r_ref =
	264'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    r_s00 =
	903'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    r_s01 =
	263'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    r_s01_tmpMode = 7'h2A;
    r_s01_tmpPred =
	512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    r_s01_tmpSum = 26'h2AAAAAA;
    r_status_dec = 5'h0A;
    r_status_enc = 5'h0A;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkIntraPred8

