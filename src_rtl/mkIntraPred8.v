//
// Generated by Bluespec Compiler, version 2021.06.chen (build f2da894e, 2021-06-19)
//
// On Tue Jun 22 21:02:03 CST 2021
//
//
// Ports:
// Name                         I/O  size props
// RDY_startPred                  O     1
// io_out_get                     O   532
// RDY_io_out_get                 O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// startPred_xRef                 I   264 reg
// startPred_cur                  I   512 reg
// startPred_dcVal                I     8 reg
// EN_startPred                   I     1
// EN_io_out_get                  I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkIntraPred8(CLK,
		    RST_N,

		    startPred_xRef,
		    startPred_cur,
		    startPred_dcVal,
		    EN_startPred,
		    RDY_startPred,

		    EN_io_out_get,
		    io_out_get,
		    RDY_io_out_get);
  input  CLK;
  input  RST_N;

  // action method startPred
  input  [263 : 0] startPred_xRef;
  input  [511 : 0] startPred_cur;
  input  [7 : 0] startPred_dcVal;
  input  EN_startPred;
  output RDY_startPred;

  // actionvalue method io_out_get
  input  EN_io_out_get;
  output [531 : 0] io_out_get;
  output RDY_io_out_get;

  // signals for module outputs
  wire [531 : 0] io_out_get;
  wire RDY_io_out_get, RDY_startPred;

  // inlined wires
  wire [532 : 0] fifo_out_rv$port0__write_1,
		 fifo_out_rv$port1__read,
		 fifo_out_rv$port1__write_1,
		 fifo_out_rv$port2__read;
  wire fifo_out_rv$EN_port1__write;

  // register fifo_out_rv
  reg [532 : 0] fifo_out_rv;
  wire [532 : 0] fifo_out_rv$D_IN;
  wire fifo_out_rv$EN;

  // register r_bestMode
  reg [5 : 0] r_bestMode;
  wire [5 : 0] r_bestMode$D_IN;
  wire r_bestMode$EN;

  // register r_bestPred
  reg [511 : 0] r_bestPred;
  wire [511 : 0] r_bestPred$D_IN;
  wire r_bestPred$EN;

  // register r_bestRecon
  reg [511 : 0] r_bestRecon;
  wire [511 : 0] r_bestRecon$D_IN;
  wire r_bestRecon$EN;

  // register r_bestSad
  reg [13 : 0] r_bestSad;
  wire [13 : 0] r_bestSad$D_IN;
  wire r_bestSad$EN;

  // register r_cnt
  reg [6 : 0] r_cnt;
  wire [6 : 0] r_cnt$D_IN;
  wire r_cnt$EN;

  // register r_cur
  reg [511 : 0] r_cur;
  wire [511 : 0] r_cur$D_IN;
  wire r_cur$EN;

  // register r_dcVal
  reg [7 : 0] r_dcVal;
  wire [7 : 0] r_dcVal$D_IN;
  wire r_dcVal$EN;

  // register r_done
  reg r_done;
  wire r_done$D_IN, r_done$EN;

  // register r_planar_dx
  reg [87 : 0] r_planar_dx;
  wire [87 : 0] r_planar_dx$D_IN;
  wire r_planar_dx$EN;

  // register r_planar_dy
  reg [87 : 0] r_planar_dy;
  wire [87 : 0] r_planar_dy$D_IN;
  wire r_planar_dy$EN;

  // register r_qp
  reg [5 : 0] r_qp;
  wire [5 : 0] r_qp$D_IN;
  wire r_qp$EN;

  // register r_ref
  reg [263 : 0] r_ref;
  wire [263 : 0] r_ref$D_IN;
  wire r_ref$EN;

  // register r_s00
  reg [1034 : 0] r_s00;
  wire [1034 : 0] r_s00$D_IN;
  wire r_s00$EN;

  // register r_s01
  reg [262 : 0] r_s01;
  wire [262 : 0] r_s01$D_IN;
  wire r_s01$EN;

  // register r_s01_tmpMode
  reg [5 : 0] r_s01_tmpMode;
  wire [5 : 0] r_s01_tmpMode$D_IN;
  wire r_s01_tmpMode$EN;

  // register r_s01_tmpPred
  reg [511 : 0] r_s01_tmpPred;
  wire [511 : 0] r_s01_tmpPred$D_IN;
  wire r_s01_tmpPred$EN;

  // register r_s01_tmpSum
  reg [25 : 0] r_s01_tmpSum;
  wire [25 : 0] r_s01_tmpSum$D_IN;
  wire r_s01_tmpSum$EN;

  // register r_status_dec
  reg [4 : 0] r_status_dec;
  wire [4 : 0] r_status_dec$D_IN;
  wire r_status_dec$EN;

  // register r_status_enc
  reg [4 : 0] r_status_enc;
  wire [4 : 0] r_status_enc$D_IN;
  wire r_status_enc$EN;

  // ports of submodule rf_rom_m0
  wire [191 : 0] rf_rom_m0$D_IN, rf_rom_m0$D_OUT_1;
  wire [6 : 0] rf_rom_m0$ADDR_1,
	       rf_rom_m0$ADDR_2,
	       rf_rom_m0$ADDR_3,
	       rf_rom_m0$ADDR_4,
	       rf_rom_m0$ADDR_5,
	       rf_rom_m0$ADDR_IN;
  wire rf_rom_m0$WE;

  // ports of submodule rf_rom_m1
  wire [191 : 0] rf_rom_m1$D_IN, rf_rom_m1$D_OUT_1;
  wire [6 : 0] rf_rom_m1$ADDR_1,
	       rf_rom_m1$ADDR_2,
	       rf_rom_m1$ADDR_3,
	       rf_rom_m1$ADDR_4,
	       rf_rom_m1$ADDR_5,
	       rf_rom_m1$ADDR_IN;
  wire rf_rom_m1$WE;

  // ports of submodule rf_rom_x0
  wire [255 : 0] rf_rom_x0$D_IN, rf_rom_x0$D_OUT_1;
  wire [6 : 0] rf_rom_x0$ADDR_1,
	       rf_rom_x0$ADDR_2,
	       rf_rom_x0$ADDR_3,
	       rf_rom_x0$ADDR_4,
	       rf_rom_x0$ADDR_5,
	       rf_rom_x0$ADDR_IN;
  wire rf_rom_x0$WE;

  // ports of submodule rf_rom_x1
  wire [255 : 0] rf_rom_x1$D_IN, rf_rom_x1$D_OUT_1;
  wire [6 : 0] rf_rom_x1$ADDR_1,
	       rf_rom_x1$ADDR_2,
	       rf_rom_x1$ADDR_3,
	       rf_rom_x1$ADDR_4,
	       rf_rom_x1$ADDR_5,
	       rf_rom_x1$ADDR_IN;
  wire rf_rom_x1$WE;

  // inputs to muxes for submodule ports
  wire [87 : 0] MUX_r_planar_dx$write_1__VAL_2,
		MUX_r_planar_dy$write_1__VAL_1;
  wire [6 : 0] MUX_r_cnt$write_1__VAL_1;

  // remaining internal signals
  wire [255 : 0] mkFlt8x4___d39;
  wire [21 : 0] _3_MUL_0_CONCAT_r_ref_read__1_BITS_79_TO_72_87_88___d498,
		_5_MUL_0_CONCAT_r_ref_read__1_BITS_79_TO_72_87_88___d494,
		_6_MUL_0_CONCAT_r_ref_read__1_BITS_79_TO_72_87_88___d492,
		_7_MUL_0_CONCAT_r_ref_read__1_BITS_79_TO_72_87_88___d489;
  wire [13 : 0] xSad__h75915;
  wire [12 : 0] _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__2_BIT_256__ETC___d101,
		_0_CONCAT_IF_0_CONCAT_IF_r_s01_read__2_BIT_256__ETC___d152,
		_0_CONCAT_IF_0_CONCAT_IF_r_s01_read__2_BIT_256__ETC___d204,
		_0_CONCAT_IF_0_CONCAT_IF_r_s01_read__2_BIT_256__ETC___d255,
		_0_CONCAT_IF_0_CONCAT_IF_r_s01_read__2_BIT_256__ETC___d308,
		_0_CONCAT_IF_0_CONCAT_IF_r_s01_read__2_BIT_256__ETC___d359,
		_0_CONCAT_IF_0_CONCAT_IF_r_s01_read__2_BIT_256__ETC___d411,
		_0_CONCAT_IF_0_CONCAT_IF_r_s01_read__2_BIT_256__ETC___d462,
		_0_CONCAT_IF_0_CONCAT_IF_r_s01_read__2_BIT_256__ETC___d465;
  wire [8 : 0] _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d108,
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d120,
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d133,
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d145,
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d160,
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d172,
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d185,
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d197,
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d211,
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d223,
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d236,
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d248,
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d264,
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d276,
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d289,
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d301,
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d315,
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d327,
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d340,
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d352,
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d367,
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d379,
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d392,
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d404,
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d418,
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d430,
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d443,
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d455,
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d57,
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d69,
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d82,
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d94;
  wire [7 : 0] x__h69066,
	       x__h69114,
	       x__h69910,
	       x__h69956,
	       x__h70104,
	       x__h70150,
	       x__h70289,
	       x__h70335,
	       x__h70492,
	       x__h70538,
	       x__h70677,
	       x__h70723,
	       x__h70871,
	       x__h70917,
	       x__h71056,
	       x__h71102,
	       x__h71268,
	       x__h71314,
	       x__h71453,
	       x__h71499,
	       x__h71647,
	       x__h71693,
	       x__h71832,
	       x__h71878,
	       x__h72035,
	       x__h72081,
	       x__h72220,
	       x__h72266,
	       x__h72414,
	       x__h72460,
	       x__h72599,
	       x__h72645,
	       x__h72820,
	       x__h72866,
	       x__h73005,
	       x__h73051,
	       x__h73199,
	       x__h73245,
	       x__h73384,
	       x__h73430,
	       x__h73587,
	       x__h73633,
	       x__h73772,
	       x__h73818,
	       x__h73966,
	       x__h74012,
	       x__h74151,
	       x__h74197,
	       x__h74363,
	       x__h74409,
	       x__h74548,
	       x__h74594,
	       x__h74742,
	       x__h74788,
	       x__h74927,
	       x__h74973,
	       x__h75130,
	       x__h75176,
	       x__h75315,
	       x__h75361,
	       x__h75509,
	       x__h75555,
	       x__h75694,
	       x__h75740;
  wire _0_CONCAT_r_s01_tmpSum_read__7_BITS_12_TO_0_8_6_ETC___d474,
       x0__h4695,
       x1__h4696;

  // action method startPred
  assign RDY_startPred = !r_status_enc[0] ;

  // actionvalue method io_out_get
  assign io_out_get = fifo_out_rv[531:0] ;
  assign RDY_io_out_get = fifo_out_rv[532] ;

  // submodule rf_rom_m0
  RegFileLoad #(.file("tbl_intra_m0.hex"),
		.addr_width(32'd7),
		.data_width(32'd192),
		.lo(7'd0),
		.hi(7'd70),
		.binary(1'd0)) rf_rom_m0(.CLK(CLK),
					 .ADDR_1(rf_rom_m0$ADDR_1),
					 .ADDR_2(rf_rom_m0$ADDR_2),
					 .ADDR_3(rf_rom_m0$ADDR_3),
					 .ADDR_4(rf_rom_m0$ADDR_4),
					 .ADDR_5(rf_rom_m0$ADDR_5),
					 .ADDR_IN(rf_rom_m0$ADDR_IN),
					 .D_IN(rf_rom_m0$D_IN),
					 .WE(rf_rom_m0$WE),
					 .D_OUT_1(rf_rom_m0$D_OUT_1),
					 .D_OUT_2(),
					 .D_OUT_3(),
					 .D_OUT_4(),
					 .D_OUT_5());

  // submodule rf_rom_m1
  RegFileLoad #(.file("tbl_intra_m1.hex"),
		.addr_width(32'd7),
		.data_width(32'd192),
		.lo(7'd0),
		.hi(7'd70),
		.binary(1'd0)) rf_rom_m1(.CLK(CLK),
					 .ADDR_1(rf_rom_m1$ADDR_1),
					 .ADDR_2(rf_rom_m1$ADDR_2),
					 .ADDR_3(rf_rom_m1$ADDR_3),
					 .ADDR_4(rf_rom_m1$ADDR_4),
					 .ADDR_5(rf_rom_m1$ADDR_5),
					 .ADDR_IN(rf_rom_m1$ADDR_IN),
					 .D_IN(rf_rom_m1$D_IN),
					 .WE(rf_rom_m1$WE),
					 .D_OUT_1(rf_rom_m1$D_OUT_1),
					 .D_OUT_2(),
					 .D_OUT_3(),
					 .D_OUT_4(),
					 .D_OUT_5());

  // submodule rf_rom_x0
  RegFileLoad #(.file("tbl_intra_x0.hex"),
		.addr_width(32'd7),
		.data_width(32'd256),
		.lo(7'd0),
		.hi(7'd70),
		.binary(1'd0)) rf_rom_x0(.CLK(CLK),
					 .ADDR_1(rf_rom_x0$ADDR_1),
					 .ADDR_2(rf_rom_x0$ADDR_2),
					 .ADDR_3(rf_rom_x0$ADDR_3),
					 .ADDR_4(rf_rom_x0$ADDR_4),
					 .ADDR_5(rf_rom_x0$ADDR_5),
					 .ADDR_IN(rf_rom_x0$ADDR_IN),
					 .D_IN(rf_rom_x0$D_IN),
					 .WE(rf_rom_x0$WE),
					 .D_OUT_1(rf_rom_x0$D_OUT_1),
					 .D_OUT_2(),
					 .D_OUT_3(),
					 .D_OUT_4(),
					 .D_OUT_5());

  // submodule rf_rom_x1
  RegFileLoad #(.file("tbl_intra_x1.hex"),
		.addr_width(32'd7),
		.data_width(32'd256),
		.lo(7'd0),
		.hi(7'd70),
		.binary(1'd0)) rf_rom_x1(.CLK(CLK),
					 .ADDR_1(rf_rom_x1$ADDR_1),
					 .ADDR_2(rf_rom_x1$ADDR_2),
					 .ADDR_3(rf_rom_x1$ADDR_3),
					 .ADDR_4(rf_rom_x1$ADDR_4),
					 .ADDR_5(rf_rom_x1$ADDR_5),
					 .ADDR_IN(rf_rom_x1$ADDR_IN),
					 .D_IN(rf_rom_x1$D_IN),
					 .WE(rf_rom_x1$WE),
					 .D_OUT_1(rf_rom_x1$D_OUT_1),
					 .D_OUT_2(),
					 .D_OUT_3(),
					 .D_OUT_4(),
					 .D_OUT_5());

  // inputs to muxes for submodule ports
  assign MUX_r_cnt$write_1__VAL_1 = r_cnt + 7'd1 ;
  assign MUX_r_planar_dx$write_1__VAL_2 =
	     { r_ref[79:72],
	       3'd0,
	       _7_MUL_0_CONCAT_r_ref_read__1_BITS_79_TO_72_87_88___d489[10:0],
	       _6_MUL_0_CONCAT_r_ref_read__1_BITS_79_TO_72_87_88___d492[10:0],
	       _5_MUL_0_CONCAT_r_ref_read__1_BITS_79_TO_72_87_88___d494[10:0],
	       1'd0,
	       r_ref[79:72],
	       2'd0,
	       _3_MUL_0_CONCAT_r_ref_read__1_BITS_79_TO_72_87_88___d498[10:0],
	       2'd0,
	       r_ref[79:72],
	       4'd0,
	       r_ref[79:72] } ;
  assign MUX_r_planar_dy$write_1__VAL_1 = { 44'd0, r_planar_dy[87:44] } ;

  // inlined wires
  assign fifo_out_rv$port0__write_1 =
	     { 1'd0,
	       532'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign fifo_out_rv$port1__read =
	     EN_io_out_get ? fifo_out_rv$port0__write_1 : fifo_out_rv ;
  assign fifo_out_rv$EN_port1__write =
	     !fifo_out_rv$port1__read[532] && r_status_dec[0] ;
  assign fifo_out_rv$port1__write_1 =
	     { 1'd1, r_bestMode, r_bestSad, r_bestPred } ;
  assign fifo_out_rv$port2__read =
	     fifo_out_rv$EN_port1__write ?
	       fifo_out_rv$port1__write_1 :
	       fifo_out_rv$port1__read ;

  // register fifo_out_rv
  assign fifo_out_rv$D_IN = fifo_out_rv$port2__read ;
  assign fifo_out_rv$EN = 1'b1 ;

  // register r_bestMode
  assign r_bestMode$D_IN = r_s01_tmpMode ;
  assign r_bestMode$EN =
	     r_status_enc[4] &&
	     _0_CONCAT_r_s01_tmpSum_read__7_BITS_12_TO_0_8_6_ETC___d474 ;

  // register r_bestPred
  assign r_bestPred$D_IN = r_s01_tmpPred ;
  assign r_bestPred$EN =
	     r_status_enc[4] &&
	     _0_CONCAT_r_s01_tmpSum_read__7_BITS_12_TO_0_8_6_ETC___d474 ;

  // register r_bestRecon
  assign r_bestRecon$D_IN = 512'h0 ;
  assign r_bestRecon$EN = 1'b0 ;

  // register r_bestSad
  assign r_bestSad$D_IN = xSad__h75915 ;
  assign r_bestSad$EN =
	     r_status_enc[4] &&
	     _0_CONCAT_r_s01_tmpSum_read__7_BITS_12_TO_0_8_6_ETC___d474 ;

  // register r_cnt
  assign r_cnt$D_IN = r_status_enc[0] ? MUX_r_cnt$write_1__VAL_1 : 7'd0 ;
  assign r_cnt$EN = r_status_enc[0] || EN_startPred ;

  // register r_cur
  assign r_cur$D_IN = startPred_cur ;
  assign r_cur$EN = EN_startPred ;

  // register r_dcVal
  assign r_dcVal$D_IN = startPred_dcVal ;
  assign r_dcVal$EN = EN_startPred ;

  // register r_done
  assign r_done$D_IN = 1'b0 ;
  assign r_done$EN = 1'b0 ;

  // register r_planar_dx
  assign r_planar_dx$D_IN =
	     r_cnt[0] ? 88'd0 : MUX_r_planar_dx$write_1__VAL_2 ;
  assign r_planar_dx$EN = r_cnt[0] || EN_startPred ;

  // register r_planar_dy
  assign r_planar_dy$D_IN = MUX_r_planar_dy$write_1__VAL_1 ;
  assign r_planar_dy$EN = 1'b1 ;

  // register r_qp
  assign r_qp$D_IN = 6'h0 ;
  assign r_qp$EN = 1'b0 ;

  // register r_ref
  assign r_ref$D_IN = startPred_xRef ;
  assign r_ref$EN = EN_startPred ;

  // register r_s00
  assign r_s00$D_IN =
	     { r_cnt,
	       r_planar_dx,
	       r_planar_dy[43:0],
	       rf_rom_m0$D_OUT_1,
	       rf_rom_m1$D_OUT_1,
	       rf_rom_x0$D_OUT_1,
	       rf_rom_x1$D_OUT_1 } ;
  assign r_s00$EN = r_status_enc[0] ;

  // register r_s01
  assign r_s01$D_IN = { r_s00[1034:1028], mkFlt8x4___d39 } ;
  assign r_s01$EN = r_status_enc[1] ;

  // register r_s01_tmpMode
  assign r_s01_tmpMode$D_IN = r_s01[262:257] ;
  assign r_s01_tmpMode$EN = r_status_enc[2] ;

  // register r_s01_tmpPred
  assign r_s01_tmpPred$D_IN = { r_s01[255:0], r_s01_tmpPred[511:256] } ;
  assign r_s01_tmpPred$EN = r_status_enc[2] ;

  // register r_s01_tmpSum
  assign r_s01_tmpSum$D_IN =
	     { r_s01_tmpSum[12:0],
	       _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__2_BIT_256__ETC___d465 } ;
  assign r_s01_tmpSum$EN = r_status_enc[2] ;

  // register r_status_dec
  assign r_status_dec$D_IN = { r_status_dec[3:0], x1__h4696 } ;
  assign r_status_dec$EN = 1'd1 ;

  // register r_status_enc
  assign r_status_enc$D_IN = { r_status_enc[3:0], x0__h4695 } ;
  assign r_status_enc$EN = 1'd1 ;

  // submodule rf_rom_m0
  assign rf_rom_m0$ADDR_1 = r_cnt ;
  assign rf_rom_m0$ADDR_2 = 7'h0 ;
  assign rf_rom_m0$ADDR_3 = 7'h0 ;
  assign rf_rom_m0$ADDR_4 = 7'h0 ;
  assign rf_rom_m0$ADDR_5 = 7'h0 ;
  assign rf_rom_m0$ADDR_IN = 7'h0 ;
  assign rf_rom_m0$D_IN = 192'h0 ;
  assign rf_rom_m0$WE = 1'b0 ;

  // submodule rf_rom_m1
  assign rf_rom_m1$ADDR_1 = r_cnt ;
  assign rf_rom_m1$ADDR_2 = 7'h0 ;
  assign rf_rom_m1$ADDR_3 = 7'h0 ;
  assign rf_rom_m1$ADDR_4 = 7'h0 ;
  assign rf_rom_m1$ADDR_5 = 7'h0 ;
  assign rf_rom_m1$ADDR_IN = 7'h0 ;
  assign rf_rom_m1$D_IN = 192'h0 ;
  assign rf_rom_m1$WE = 1'b0 ;

  // submodule rf_rom_x0
  assign rf_rom_x0$ADDR_1 = r_cnt ;
  assign rf_rom_x0$ADDR_2 = 7'h0 ;
  assign rf_rom_x0$ADDR_3 = 7'h0 ;
  assign rf_rom_x0$ADDR_4 = 7'h0 ;
  assign rf_rom_x0$ADDR_5 = 7'h0 ;
  assign rf_rom_x0$ADDR_IN = 7'h0 ;
  assign rf_rom_x0$D_IN = 256'h0 ;
  assign rf_rom_x0$WE = 1'b0 ;

  // submodule rf_rom_x1
  assign rf_rom_x1$ADDR_1 = r_cnt ;
  assign rf_rom_x1$ADDR_2 = 7'h0 ;
  assign rf_rom_x1$ADDR_3 = 7'h0 ;
  assign rf_rom_x1$ADDR_4 = 7'h0 ;
  assign rf_rom_x1$ADDR_5 = 7'h0 ;
  assign rf_rom_x1$ADDR_IN = 7'h0 ;
  assign rf_rom_x1$D_IN = 256'h0 ;
  assign rf_rom_x1$WE = 1'b0 ;

  // remaining internal signals
  module_mkFlt8x4 instance_mkFlt8x4_0(.mkFlt8x4_xRef({ r_dcVal, r_ref }),
				      .mkFlt8x4_dx(r_s00[1027:940]),
				      .mkFlt8x4_dy(r_s00[939:896]),
				      .mkFlt8x4_m0(r_s00[895:704]),
				      .mkFlt8x4_m1(r_s00[703:512]),
				      .mkFlt8x4_x0(r_s00[511:256]),
				      .mkFlt8x4_x1(r_s00[255:0]),
				      .mkFlt8x4(mkFlt8x4___d39));
  assign _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__2_BIT_256__ETC___d101 =
	     { 5'd0, x__h69066 } + { 5'd0, x__h69910 } + { 5'd0, x__h70104 } +
	     { 5'd0, x__h70289 } ;
  assign _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__2_BIT_256__ETC___d152 =
	     { 5'd0, x__h70492 } + { 5'd0, x__h70677 } + { 5'd0, x__h70871 } +
	     { 5'd0, x__h71056 } ;
  assign _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__2_BIT_256__ETC___d204 =
	     { 5'd0, x__h71268 } + { 5'd0, x__h71453 } + { 5'd0, x__h71647 } +
	     { 5'd0, x__h71832 } ;
  assign _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__2_BIT_256__ETC___d255 =
	     { 5'd0, x__h72035 } + { 5'd0, x__h72220 } + { 5'd0, x__h72414 } +
	     { 5'd0, x__h72599 } ;
  assign _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__2_BIT_256__ETC___d308 =
	     { 5'd0, x__h72820 } + { 5'd0, x__h73005 } + { 5'd0, x__h73199 } +
	     { 5'd0, x__h73384 } ;
  assign _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__2_BIT_256__ETC___d359 =
	     { 5'd0, x__h73587 } + { 5'd0, x__h73772 } + { 5'd0, x__h73966 } +
	     { 5'd0, x__h74151 } ;
  assign _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__2_BIT_256__ETC___d411 =
	     { 5'd0, x__h74363 } + { 5'd0, x__h74548 } + { 5'd0, x__h74742 } +
	     { 5'd0, x__h74927 } ;
  assign _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__2_BIT_256__ETC___d462 =
	     { 5'd0, x__h75130 } + { 5'd0, x__h75315 } + { 5'd0, x__h75509 } +
	     { 5'd0, x__h75694 } ;
  assign _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__2_BIT_256__ETC___d465 =
	     _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__2_BIT_256__ETC___d101 +
	     _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__2_BIT_256__ETC___d152 +
	     _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__2_BIT_256__ETC___d204 +
	     _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__2_BIT_256__ETC___d255 +
	     _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__2_BIT_256__ETC___d308 +
	     _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__2_BIT_256__ETC___d359 +
	     _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__2_BIT_256__ETC___d411 +
	     _0_CONCAT_IF_0_CONCAT_IF_r_s01_read__2_BIT_256__ETC___d462 ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d108 =
	     { 1'd0, x__h70538 } - { 1'd0, r_s01[39:32] } ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d120 =
	     { 1'd0, x__h70723 } - { 1'd0, r_s01[47:40] } ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d133 =
	     { 1'd0, x__h70917 } - { 1'd0, r_s01[55:48] } ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d145 =
	     { 1'd0, x__h71102 } - { 1'd0, r_s01[63:56] } ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d160 =
	     { 1'd0, x__h71314 } - { 1'd0, r_s01[71:64] } ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d172 =
	     { 1'd0, x__h71499 } - { 1'd0, r_s01[79:72] } ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d185 =
	     { 1'd0, x__h71693 } - { 1'd0, r_s01[87:80] } ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d197 =
	     { 1'd0, x__h71878 } - { 1'd0, r_s01[95:88] } ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d211 =
	     { 1'd0, x__h72081 } - { 1'd0, r_s01[103:96] } ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d223 =
	     { 1'd0, x__h72266 } - { 1'd0, r_s01[111:104] } ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d236 =
	     { 1'd0, x__h72460 } - { 1'd0, r_s01[119:112] } ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d248 =
	     { 1'd0, x__h72645 } - { 1'd0, r_s01[127:120] } ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d264 =
	     { 1'd0, x__h72866 } - { 1'd0, r_s01[135:128] } ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d276 =
	     { 1'd0, x__h73051 } - { 1'd0, r_s01[143:136] } ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d289 =
	     { 1'd0, x__h73245 } - { 1'd0, r_s01[151:144] } ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d301 =
	     { 1'd0, x__h73430 } - { 1'd0, r_s01[159:152] } ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d315 =
	     { 1'd0, x__h73633 } - { 1'd0, r_s01[167:160] } ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d327 =
	     { 1'd0, x__h73818 } - { 1'd0, r_s01[175:168] } ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d340 =
	     { 1'd0, x__h74012 } - { 1'd0, r_s01[183:176] } ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d352 =
	     { 1'd0, x__h74197 } - { 1'd0, r_s01[191:184] } ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d367 =
	     { 1'd0, x__h74409 } - { 1'd0, r_s01[199:192] } ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d379 =
	     { 1'd0, x__h74594 } - { 1'd0, r_s01[207:200] } ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d392 =
	     { 1'd0, x__h74788 } - { 1'd0, r_s01[215:208] } ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d404 =
	     { 1'd0, x__h74973 } - { 1'd0, r_s01[223:216] } ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d418 =
	     { 1'd0, x__h75176 } - { 1'd0, r_s01[231:224] } ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d430 =
	     { 1'd0, x__h75361 } - { 1'd0, r_s01[239:232] } ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d443 =
	     { 1'd0, x__h75555 } - { 1'd0, r_s01[247:240] } ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d455 =
	     { 1'd0, x__h75740 } - { 1'd0, r_s01[255:248] } ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d57 =
	     { 1'd0, x__h69114 } - { 1'd0, r_s01[7:0] } ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d69 =
	     { 1'd0, x__h69956 } - { 1'd0, r_s01[15:8] } ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d82 =
	     { 1'd0, x__h70150 } - { 1'd0, r_s01[23:16] } ;
  assign _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d94 =
	     { 1'd0, x__h70335 } - { 1'd0, r_s01[31:24] } ;
  assign _0_CONCAT_r_s01_tmpSum_read__7_BITS_12_TO_0_8_6_ETC___d474 =
	     xSad__h75915 < r_bestSad ;
  assign _3_MUL_0_CONCAT_r_ref_read__1_BITS_79_TO_72_87_88___d498 =
	     11'd3 * { 3'd0, r_ref[79:72] } ;
  assign _5_MUL_0_CONCAT_r_ref_read__1_BITS_79_TO_72_87_88___d494 =
	     11'd5 * { 3'd0, r_ref[79:72] } ;
  assign _6_MUL_0_CONCAT_r_ref_read__1_BITS_79_TO_72_87_88___d492 =
	     11'd6 * { 3'd0, r_ref[79:72] } ;
  assign _7_MUL_0_CONCAT_r_ref_read__1_BITS_79_TO_72_87_88___d489 =
	     11'd7 * { 3'd0, r_ref[79:72] } ;
  assign x0__h4695 = EN_startPred || r_cnt < 7'd70 ;
  assign x1__h4696 = r_status_enc[4] && r_s01_tmpMode >= 6'd35 ;
  assign xSad__h75915 =
	     { 1'd0, r_s01_tmpSum[12:0] } + { 1'd0, r_s01_tmpSum[25:13] } ;
  assign x__h69066 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d57[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d57[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d57[7:0] ;
  assign x__h69114 = r_s01[256] ? r_cur[263:256] : r_cur[7:0] ;
  assign x__h69910 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d69[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d69[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d69[7:0] ;
  assign x__h69956 = r_s01[256] ? r_cur[271:264] : r_cur[15:8] ;
  assign x__h70104 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d82[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d82[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d82[7:0] ;
  assign x__h70150 = r_s01[256] ? r_cur[279:272] : r_cur[23:16] ;
  assign x__h70289 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d94[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d94[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d94[7:0] ;
  assign x__h70335 = r_s01[256] ? r_cur[287:280] : r_cur[31:24] ;
  assign x__h70492 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d108[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d108[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d108[7:0] ;
  assign x__h70538 = r_s01[256] ? r_cur[295:288] : r_cur[39:32] ;
  assign x__h70677 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d120[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d120[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d120[7:0] ;
  assign x__h70723 = r_s01[256] ? r_cur[303:296] : r_cur[47:40] ;
  assign x__h70871 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d133[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d133[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d133[7:0] ;
  assign x__h70917 = r_s01[256] ? r_cur[311:304] : r_cur[55:48] ;
  assign x__h71056 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d145[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d145[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d145[7:0] ;
  assign x__h71102 = r_s01[256] ? r_cur[319:312] : r_cur[63:56] ;
  assign x__h71268 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d160[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d160[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d160[7:0] ;
  assign x__h71314 = r_s01[256] ? r_cur[327:320] : r_cur[71:64] ;
  assign x__h71453 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d172[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d172[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d172[7:0] ;
  assign x__h71499 = r_s01[256] ? r_cur[335:328] : r_cur[79:72] ;
  assign x__h71647 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d185[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d185[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d185[7:0] ;
  assign x__h71693 = r_s01[256] ? r_cur[343:336] : r_cur[87:80] ;
  assign x__h71832 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d197[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d197[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d197[7:0] ;
  assign x__h71878 = r_s01[256] ? r_cur[351:344] : r_cur[95:88] ;
  assign x__h72035 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d211[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d211[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d211[7:0] ;
  assign x__h72081 = r_s01[256] ? r_cur[359:352] : r_cur[103:96] ;
  assign x__h72220 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d223[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d223[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d223[7:0] ;
  assign x__h72266 = r_s01[256] ? r_cur[367:360] : r_cur[111:104] ;
  assign x__h72414 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d236[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d236[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d236[7:0] ;
  assign x__h72460 = r_s01[256] ? r_cur[375:368] : r_cur[119:112] ;
  assign x__h72599 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d248[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d248[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d248[7:0] ;
  assign x__h72645 = r_s01[256] ? r_cur[383:376] : r_cur[127:120] ;
  assign x__h72820 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d264[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d264[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d264[7:0] ;
  assign x__h72866 = r_s01[256] ? r_cur[391:384] : r_cur[135:128] ;
  assign x__h73005 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d276[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d276[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d276[7:0] ;
  assign x__h73051 = r_s01[256] ? r_cur[399:392] : r_cur[143:136] ;
  assign x__h73199 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d289[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d289[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d289[7:0] ;
  assign x__h73245 = r_s01[256] ? r_cur[407:400] : r_cur[151:144] ;
  assign x__h73384 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d301[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d301[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d301[7:0] ;
  assign x__h73430 = r_s01[256] ? r_cur[415:408] : r_cur[159:152] ;
  assign x__h73587 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d315[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d315[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d315[7:0] ;
  assign x__h73633 = r_s01[256] ? r_cur[423:416] : r_cur[167:160] ;
  assign x__h73772 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d327[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d327[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d327[7:0] ;
  assign x__h73818 = r_s01[256] ? r_cur[431:424] : r_cur[175:168] ;
  assign x__h73966 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d340[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d340[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d340[7:0] ;
  assign x__h74012 = r_s01[256] ? r_cur[439:432] : r_cur[183:176] ;
  assign x__h74151 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d352[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d352[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d352[7:0] ;
  assign x__h74197 = r_s01[256] ? r_cur[447:440] : r_cur[191:184] ;
  assign x__h74363 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d367[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d367[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d367[7:0] ;
  assign x__h74409 = r_s01[256] ? r_cur[455:448] : r_cur[199:192] ;
  assign x__h74548 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d379[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d379[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d379[7:0] ;
  assign x__h74594 = r_s01[256] ? r_cur[463:456] : r_cur[207:200] ;
  assign x__h74742 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d392[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d392[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d392[7:0] ;
  assign x__h74788 = r_s01[256] ? r_cur[471:464] : r_cur[215:208] ;
  assign x__h74927 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d404[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d404[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d404[7:0] ;
  assign x__h74973 = r_s01[256] ? r_cur[479:472] : r_cur[223:216] ;
  assign x__h75130 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d418[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d418[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d418[7:0] ;
  assign x__h75176 = r_s01[256] ? r_cur[487:480] : r_cur[231:224] ;
  assign x__h75315 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d430[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d430[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d430[7:0] ;
  assign x__h75361 = r_s01[256] ? r_cur[495:488] : r_cur[239:232] ;
  assign x__h75509 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d443[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d443[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d443[7:0] ;
  assign x__h75555 = r_s01[256] ? r_cur[503:496] : r_cur[247:240] ;
  assign x__h75694 =
	     _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d455[8] ?
	       -_0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d455[7:0] :
	       _0_CONCAT_IF_r_s01_read__2_BIT_256_9_THEN_r_cur_ETC___d455[7:0] ;
  assign x__h75740 = r_s01[256] ? r_cur[511:504] : r_cur[255:248] ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        fifo_out_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      532'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	r_bestSad <= `BSV_ASSIGNMENT_DELAY 14'd16383;
	r_cnt <= `BSV_ASSIGNMENT_DELAY 7'd127;
	r_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	r_status_dec <= `BSV_ASSIGNMENT_DELAY 5'd0;
	r_status_enc <= `BSV_ASSIGNMENT_DELAY 5'd0;
      end
    else
      begin
        if (fifo_out_rv$EN)
	  fifo_out_rv <= `BSV_ASSIGNMENT_DELAY fifo_out_rv$D_IN;
	if (r_bestSad$EN) r_bestSad <= `BSV_ASSIGNMENT_DELAY r_bestSad$D_IN;
	if (r_cnt$EN) r_cnt <= `BSV_ASSIGNMENT_DELAY r_cnt$D_IN;
	if (r_done$EN) r_done <= `BSV_ASSIGNMENT_DELAY r_done$D_IN;
	if (r_status_dec$EN)
	  r_status_dec <= `BSV_ASSIGNMENT_DELAY r_status_dec$D_IN;
	if (r_status_enc$EN)
	  r_status_enc <= `BSV_ASSIGNMENT_DELAY r_status_enc$D_IN;
      end
    if (r_bestMode$EN) r_bestMode <= `BSV_ASSIGNMENT_DELAY r_bestMode$D_IN;
    if (r_bestPred$EN) r_bestPred <= `BSV_ASSIGNMENT_DELAY r_bestPred$D_IN;
    if (r_bestRecon$EN) r_bestRecon <= `BSV_ASSIGNMENT_DELAY r_bestRecon$D_IN;
    if (r_cur$EN) r_cur <= `BSV_ASSIGNMENT_DELAY r_cur$D_IN;
    if (r_dcVal$EN) r_dcVal <= `BSV_ASSIGNMENT_DELAY r_dcVal$D_IN;
    if (r_planar_dx$EN) r_planar_dx <= `BSV_ASSIGNMENT_DELAY r_planar_dx$D_IN;
    if (r_planar_dy$EN) r_planar_dy <= `BSV_ASSIGNMENT_DELAY r_planar_dy$D_IN;
    if (r_qp$EN) r_qp <= `BSV_ASSIGNMENT_DELAY r_qp$D_IN;
    if (r_ref$EN) r_ref <= `BSV_ASSIGNMENT_DELAY r_ref$D_IN;
    if (r_s00$EN) r_s00 <= `BSV_ASSIGNMENT_DELAY r_s00$D_IN;
    if (r_s01$EN) r_s01 <= `BSV_ASSIGNMENT_DELAY r_s01$D_IN;
    if (r_s01_tmpMode$EN)
      r_s01_tmpMode <= `BSV_ASSIGNMENT_DELAY r_s01_tmpMode$D_IN;
    if (r_s01_tmpPred$EN)
      r_s01_tmpPred <= `BSV_ASSIGNMENT_DELAY r_s01_tmpPred$D_IN;
    if (r_s01_tmpSum$EN)
      r_s01_tmpSum <= `BSV_ASSIGNMENT_DELAY r_s01_tmpSum$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    fifo_out_rv =
	533'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    r_bestMode = 6'h2A;
    r_bestPred =
	512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    r_bestRecon =
	512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    r_bestSad = 14'h2AAA;
    r_cnt = 7'h2A;
    r_cur =
	512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    r_dcVal = 8'hAA;
    r_done = 1'h0;
    r_planar_dx = 88'hAAAAAAAAAAAAAAAAAAAAAA;
    r_planar_dy = 88'hAAAAAAAAAAAAAAAAAAAAAA;
    r_qp = 6'h2A;
    r_ref =
	264'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    r_s00 =
	1035'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    r_s01 =
	263'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    r_s01_tmpMode = 6'h2A;
    r_s01_tmpPred =
	512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    r_s01_tmpSum = 26'h2AAAAAA;
    r_status_dec = 5'h0A;
    r_status_enc = 5'h0A;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkIntraPred8

